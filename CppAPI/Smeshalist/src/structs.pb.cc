// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structs.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "structs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace structDefinitions {

namespace {

const ::google::protobuf::Descriptor* Properties_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Properties_reflection_ = NULL;
const ::google::protobuf::Descriptor* Point3D_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Point3D_reflection_ = NULL;
const ::google::protobuf::Descriptor* Vertex_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Vertex_reflection_ = NULL;
const ::google::protobuf::Descriptor* Edge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Edge_reflection_ = NULL;
const ::google::protobuf::Descriptor* TriangleFace_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TriangleFace_reflection_ = NULL;
const ::google::protobuf::Descriptor* Block_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Block_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageInfo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MessageInfo_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Header_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Header_reflection_ = NULL;
const ::google::protobuf::Descriptor* DataPackage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataPackage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_structs_2eproto() {
  protobuf_AddDesc_structs_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "structs.proto");
  GOOGLE_CHECK(file != NULL);
  Properties_descriptor_ = file->message_type(0);
  static const int Properties_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties, label_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties, groupid_),
  };
  Properties_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Properties_descriptor_,
      Properties::default_instance_,
      Properties_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties, _has_bits_[0]),
      -1,
      -1,
      sizeof(Properties),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties, _internal_metadata_),
      -1);
  Point3D_descriptor_ = file->message_type(1);
  static const int Point3D_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, z_),
  };
  Point3D_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Point3D_descriptor_,
      Point3D::default_instance_,
      Point3D_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, _has_bits_[0]),
      -1,
      -1,
      sizeof(Point3D),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, _internal_metadata_),
      -1);
  Vertex_descriptor_ = file->message_type(2);
  static const int Vertex_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vertex, point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vertex, prop_),
  };
  Vertex_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Vertex_descriptor_,
      Vertex::default_instance_,
      Vertex_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vertex, _has_bits_[0]),
      -1,
      -1,
      sizeof(Vertex),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vertex, _internal_metadata_),
      -1);
  Edge_descriptor_ = file->message_type(3);
  static const int Edge_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edge, v1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edge, v2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edge, prop_),
  };
  Edge_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Edge_descriptor_,
      Edge::default_instance_,
      Edge_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edge, _has_bits_[0]),
      -1,
      -1,
      sizeof(Edge),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edge, _internal_metadata_),
      -1);
  TriangleFace_descriptor_ = file->message_type(4);
  static const int TriangleFace_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TriangleFace, v1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TriangleFace, v2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TriangleFace, v3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TriangleFace, prop_),
  };
  TriangleFace_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TriangleFace_descriptor_,
      TriangleFace::default_instance_,
      TriangleFace_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TriangleFace, _has_bits_[0]),
      -1,
      -1,
      sizeof(TriangleFace),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TriangleFace, _internal_metadata_),
      -1);
  Block_descriptor_ = file->message_type(5);
  static const int Block_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, v1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, v2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, v3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, v4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, prop_),
  };
  Block_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Block_descriptor_,
      Block::default_instance_,
      Block_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, _has_bits_[0]),
      -1,
      -1,
      sizeof(Block),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, _internal_metadata_),
      -1);
  MessageInfo_descriptor_ = file->message_type(6);
  static const int MessageInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, type_),
  };
  MessageInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageInfo_descriptor_,
      MessageInfo::default_instance_,
      MessageInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(MessageInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, _internal_metadata_),
      -1);
  MessageInfo_Type_descriptor_ = MessageInfo_descriptor_->enum_type(0);
  Header_descriptor_ = file->message_type(7);
  static const int Header_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, sizeofdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, endofdata_),
  };
  Header_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Header_descriptor_,
      Header::default_instance_,
      Header_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, _has_bits_[0]),
      -1,
      -1,
      sizeof(Header),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, _internal_metadata_),
      -1);
  DataPackage_descriptor_ = file->message_type(8);
  static const int DataPackage_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataPackage, vertexes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataPackage, edges_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataPackage, faces_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataPackage, blocks_),
  };
  DataPackage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DataPackage_descriptor_,
      DataPackage::default_instance_,
      DataPackage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataPackage, _has_bits_[0]),
      -1,
      -1,
      sizeof(DataPackage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataPackage, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_structs_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Properties_descriptor_, &Properties::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Point3D_descriptor_, &Point3D::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Vertex_descriptor_, &Vertex::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Edge_descriptor_, &Edge::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TriangleFace_descriptor_, &TriangleFace::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Block_descriptor_, &Block::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageInfo_descriptor_, &MessageInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Header_descriptor_, &Header::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DataPackage_descriptor_, &DataPackage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_structs_2eproto() {
  delete Properties::default_instance_;
  delete Properties_reflection_;
  delete Point3D::default_instance_;
  delete Point3D_reflection_;
  delete Vertex::default_instance_;
  delete Vertex_reflection_;
  delete Edge::default_instance_;
  delete Edge_reflection_;
  delete TriangleFace::default_instance_;
  delete TriangleFace_reflection_;
  delete Block::default_instance_;
  delete Block_reflection_;
  delete MessageInfo::default_instance_;
  delete MessageInfo_reflection_;
  delete Header::default_instance_;
  delete Header_reflection_;
  delete DataPackage::default_instance_;
  delete DataPackage_reflection_;
}

void protobuf_AddDesc_structs_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rstructs.proto\022\021structDefinitions\"=\n\nPr"
    "operties\022\017\n\007quality\030\001 \001(\001\022\r\n\005label\030\002 \001(\t"
    "\022\017\n\007groupId\030\003 \001(\005\"*\n\007Point3D\022\t\n\001x\030\001 \002(\001\022"
    "\t\n\001y\030\002 \002(\001\022\t\n\001z\030\003 \002(\001\"`\n\006Vertex\022)\n\005point"
    "\030\001 \002(\0132\032.structDefinitions.Point3D\022+\n\004pr"
    "op\030\002 \001(\0132\035.structDefinitions.Properties\""
    "\203\001\n\004Edge\022&\n\002v1\030\001 \002(\0132\032.structDefinitions"
    ".Point3D\022&\n\002v2\030\002 \002(\0132\032.structDefinitions"
    ".Point3D\022+\n\004prop\030\003 \001(\0132\035.structDefinitio"
    "ns.Properties\"\263\001\n\014TriangleFace\022&\n\002v1\030\001 \002"
    "(\0132\032.structDefinitions.Point3D\022&\n\002v2\030\002 \002"
    "(\0132\032.structDefinitions.Point3D\022&\n\002v3\030\003 \002"
    "(\0132\032.structDefinitions.Point3D\022+\n\004prop\030\004"
    " \001(\0132\035.structDefinitions.Properties\"\324\001\n\005"
    "Block\022&\n\002v1\030\001 \002(\0132\032.structDefinitions.Po"
    "int3D\022&\n\002v2\030\002 \002(\0132\032.structDefinitions.Po"
    "int3D\022&\n\002v3\030\003 \002(\0132\032.structDefinitions.Po"
    "int3D\022&\n\002v4\030\004 \002(\0132\032.structDefinitions.Po"
    "int3D\022+\n\004prop\030\005 \001(\0132\035.structDefinitions."
    "Properties\"\236\001\n\013MessageInfo\0221\n\004type\030\001 \002(\016"
    "2#.structDefinitions.MessageInfo.Type\"\\\n"
    "\004Type\022\010\n\004DATA\020\001\022\n\n\006RENDER\020\002\022\016\n\nBREAKPOIN"
    "T\020\003\022\014\n\010ACCEPTED\020\004\022\014\n\010REJECTED\020\005\022\007\n\003ACK\020\006"
    "\022\t\n\005CLEAN\020\007\"/\n\006Header\022\022\n\nsizeOfData\030\001 \002("
    "\005\022\021\n\tendOfData\030\007 \002(\010\"\274\001\n\013DataPackage\022+\n\010"
    "vertexes\030\002 \003(\0132\031.structDefinitions.Verte"
    "x\022&\n\005edges\030\003 \003(\0132\027.structDefinitions.Edg"
    "e\022.\n\005faces\030\004 \003(\0132\037.structDefinitions.Tri"
    "angleFace\022(\n\006blocks\030\005 \003(\0132\030.structDefini"
    "tions.Block", 1171);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "structs.proto", &protobuf_RegisterTypes);
  Properties::default_instance_ = new Properties();
  Point3D::default_instance_ = new Point3D();
  Vertex::default_instance_ = new Vertex();
  Edge::default_instance_ = new Edge();
  TriangleFace::default_instance_ = new TriangleFace();
  Block::default_instance_ = new Block();
  MessageInfo::default_instance_ = new MessageInfo();
  Header::default_instance_ = new Header();
  DataPackage::default_instance_ = new DataPackage();
  Properties::default_instance_->InitAsDefaultInstance();
  Point3D::default_instance_->InitAsDefaultInstance();
  Vertex::default_instance_->InitAsDefaultInstance();
  Edge::default_instance_->InitAsDefaultInstance();
  TriangleFace::default_instance_->InitAsDefaultInstance();
  Block::default_instance_->InitAsDefaultInstance();
  MessageInfo::default_instance_->InitAsDefaultInstance();
  Header::default_instance_->InitAsDefaultInstance();
  DataPackage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_structs_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_structs_2eproto {
  StaticDescriptorInitializer_structs_2eproto() {
    protobuf_AddDesc_structs_2eproto();
  }
} static_descriptor_initializer_structs_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Properties::kQualityFieldNumber;
const int Properties::kLabelFieldNumber;
const int Properties::kGroupIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Properties::Properties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.Properties)
}

void Properties::InitAsDefaultInstance() {
}

Properties::Properties(const Properties& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.Properties)
}

void Properties::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  quality_ = 0;
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Properties::~Properties() {
  // @@protoc_insertion_point(destructor:structDefinitions.Properties)
  SharedDtor();
}

void Properties::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Properties::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Properties::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Properties_descriptor_;
}

const Properties& Properties::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

Properties* Properties::default_instance_ = NULL;

Properties* Properties::New(::google::protobuf::Arena* arena) const {
  Properties* n = new Properties;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Properties::Clear() {
// @@protoc_insertion_point(message_clear_start:structDefinitions.Properties)
  if (_has_bits_[0 / 32] & 7u) {
    quality_ = 0;
    if (has_label()) {
      label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    groupid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Properties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.Properties)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double quality = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_label;
        break;
      }

      // optional string label = 2;
      case 2: {
        if (tag == 18) {
         parse_label:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "structDefinitions.Properties.label");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_groupId;
        break;
      }

      // optional int32 groupId = 3;
      case 3: {
        if (tag == 24) {
         parse_groupId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &groupid_)));
          set_has_groupid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.Properties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.Properties)
  return false;
#undef DO_
}

void Properties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.Properties)
  // optional double quality = 1;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->quality(), output);
  }

  // optional string label = 2;
  if (has_label()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "structDefinitions.Properties.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  // optional int32 groupId = 3;
  if (has_groupid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->groupid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.Properties)
}

::google::protobuf::uint8* Properties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.Properties)
  // optional double quality = 1;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->quality(), target);
  }

  // optional string label = 2;
  if (has_label()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "structDefinitions.Properties.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->label(), target);
  }

  // optional int32 groupId = 3;
  if (has_groupid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->groupid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.Properties)
  return target;
}

int Properties::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:structDefinitions.Properties)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional double quality = 1;
    if (has_quality()) {
      total_size += 1 + 8;
    }

    // optional string label = 2;
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional int32 groupId = 3;
    if (has_groupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->groupid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Properties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:structDefinitions.Properties)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Properties* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Properties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:structDefinitions.Properties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:structDefinitions.Properties)
    MergeFrom(*source);
  }
}

void Properties::MergeFrom(const Properties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:structDefinitions.Properties)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_quality()) {
      set_quality(from.quality());
    }
    if (from.has_label()) {
      set_has_label();
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (from.has_groupid()) {
      set_groupid(from.groupid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Properties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:structDefinitions.Properties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Properties::CopyFrom(const Properties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:structDefinitions.Properties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Properties::IsInitialized() const {

  return true;
}

void Properties::Swap(Properties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Properties::InternalSwap(Properties* other) {
  std::swap(quality_, other->quality_);
  label_.Swap(&other->label_);
  std::swap(groupid_, other->groupid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Properties::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Properties_descriptor_;
  metadata.reflection = Properties_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Properties

// optional double quality = 1;
bool Properties::has_quality() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Properties::set_has_quality() {
  _has_bits_[0] |= 0x00000001u;
}
void Properties::clear_has_quality() {
  _has_bits_[0] &= ~0x00000001u;
}
void Properties::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
 double Properties::quality() const {
  // @@protoc_insertion_point(field_get:structDefinitions.Properties.quality)
  return quality_;
}
 void Properties::set_quality(double value) {
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:structDefinitions.Properties.quality)
}

// optional string label = 2;
bool Properties::has_label() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Properties::set_has_label() {
  _has_bits_[0] |= 0x00000002u;
}
void Properties::clear_has_label() {
  _has_bits_[0] &= ~0x00000002u;
}
void Properties::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_label();
}
 const ::std::string& Properties::label() const {
  // @@protoc_insertion_point(field_get:structDefinitions.Properties.label)
  return label_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Properties::set_label(const ::std::string& value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:structDefinitions.Properties.label)
}
 void Properties::set_label(const char* value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:structDefinitions.Properties.label)
}
 void Properties::set_label(const char* value, size_t size) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:structDefinitions.Properties.label)
}
 ::std::string* Properties::mutable_label() {
  set_has_label();
  // @@protoc_insertion_point(field_mutable:structDefinitions.Properties.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Properties::release_label() {
  // @@protoc_insertion_point(field_release:structDefinitions.Properties.label)
  clear_has_label();
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Properties::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:structDefinitions.Properties.label)
}

// optional int32 groupId = 3;
bool Properties::has_groupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Properties::set_has_groupid() {
  _has_bits_[0] |= 0x00000004u;
}
void Properties::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000004u;
}
void Properties::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
 ::google::protobuf::int32 Properties::groupid() const {
  // @@protoc_insertion_point(field_get:structDefinitions.Properties.groupId)
  return groupid_;
}
 void Properties::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:structDefinitions.Properties.groupId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point3D::kXFieldNumber;
const int Point3D::kYFieldNumber;
const int Point3D::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point3D::Point3D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.Point3D)
}

void Point3D::InitAsDefaultInstance() {
}

Point3D::Point3D(const Point3D& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.Point3D)
}

void Point3D::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Point3D::~Point3D() {
  // @@protoc_insertion_point(destructor:structDefinitions.Point3D)
  SharedDtor();
}

void Point3D::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Point3D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point3D::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Point3D_descriptor_;
}

const Point3D& Point3D::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

Point3D* Point3D::default_instance_ = NULL;

Point3D* Point3D::New(::google::protobuf::Arena* arena) const {
  Point3D* n = new Point3D;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point3D::Clear() {
// @@protoc_insertion_point(message_clear_start:structDefinitions.Point3D)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Point3D, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Point3D*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, z_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Point3D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.Point3D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_y;
        break;
      }

      // required double y = 2;
      case 2: {
        if (tag == 17) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_z;
        break;
      }

      // required double z = 3;
      case 3: {
        if (tag == 25) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.Point3D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.Point3D)
  return false;
#undef DO_
}

void Point3D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.Point3D)
  // required double x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // required double y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // required double z = 3;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.Point3D)
}

::google::protobuf::uint8* Point3D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.Point3D)
  // required double x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // required double y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // required double z = 3;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.Point3D)
  return target;
}

int Point3D::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:structDefinitions.Point3D)
  int total_size = 0;

  if (has_x()) {
    // required double x = 1;
    total_size += 1 + 8;
  }

  if (has_y()) {
    // required double y = 2;
    total_size += 1 + 8;
  }

  if (has_z()) {
    // required double z = 3;
    total_size += 1 + 8;
  }

  return total_size;
}
int Point3D::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:structDefinitions.Point3D)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required double x = 1;
    total_size += 1 + 8;

    // required double y = 2;
    total_size += 1 + 8;

    // required double z = 3;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point3D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:structDefinitions.Point3D)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Point3D* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Point3D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:structDefinitions.Point3D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:structDefinitions.Point3D)
    MergeFrom(*source);
  }
}

void Point3D::MergeFrom(const Point3D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:structDefinitions.Point3D)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Point3D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:structDefinitions.Point3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point3D::CopyFrom(const Point3D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:structDefinitions.Point3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point3D::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Point3D::Swap(Point3D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point3D::InternalSwap(Point3D* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point3D::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Point3D_descriptor_;
  metadata.reflection = Point3D_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Point3D

// required double x = 1;
bool Point3D::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Point3D::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void Point3D::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void Point3D::clear_x() {
  x_ = 0;
  clear_has_x();
}
 double Point3D::x() const {
  // @@protoc_insertion_point(field_get:structDefinitions.Point3D.x)
  return x_;
}
 void Point3D::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:structDefinitions.Point3D.x)
}

// required double y = 2;
bool Point3D::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Point3D::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void Point3D::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void Point3D::clear_y() {
  y_ = 0;
  clear_has_y();
}
 double Point3D::y() const {
  // @@protoc_insertion_point(field_get:structDefinitions.Point3D.y)
  return y_;
}
 void Point3D::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:structDefinitions.Point3D.y)
}

// required double z = 3;
bool Point3D::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Point3D::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
void Point3D::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
void Point3D::clear_z() {
  z_ = 0;
  clear_has_z();
}
 double Point3D::z() const {
  // @@protoc_insertion_point(field_get:structDefinitions.Point3D.z)
  return z_;
}
 void Point3D::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:structDefinitions.Point3D.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vertex::kPointFieldNumber;
const int Vertex::kPropFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vertex::Vertex()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.Vertex)
}

void Vertex::InitAsDefaultInstance() {
  point_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
  prop_ = const_cast< ::structDefinitions::Properties*>(&::structDefinitions::Properties::default_instance());
}

Vertex::Vertex(const Vertex& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.Vertex)
}

void Vertex::SharedCtor() {
  _cached_size_ = 0;
  point_ = NULL;
  prop_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Vertex::~Vertex() {
  // @@protoc_insertion_point(destructor:structDefinitions.Vertex)
  SharedDtor();
}

void Vertex::SharedDtor() {
  if (this != default_instance_) {
    delete point_;
    delete prop_;
  }
}

void Vertex::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vertex::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Vertex_descriptor_;
}

const Vertex& Vertex::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

Vertex* Vertex::default_instance_ = NULL;

Vertex* Vertex::New(::google::protobuf::Arena* arena) const {
  Vertex* n = new Vertex;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vertex::Clear() {
// @@protoc_insertion_point(message_clear_start:structDefinitions.Vertex)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_point()) {
      if (point_ != NULL) point_->::structDefinitions::Point3D::Clear();
    }
    if (has_prop()) {
      if (prop_ != NULL) prop_->::structDefinitions::Properties::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Vertex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.Vertex)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .structDefinitions.Point3D point = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_point()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_prop;
        break;
      }

      // optional .structDefinitions.Properties prop = 2;
      case 2: {
        if (tag == 18) {
         parse_prop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.Vertex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.Vertex)
  return false;
#undef DO_
}

void Vertex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.Vertex)
  // required .structDefinitions.Point3D point = 1;
  if (has_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->point_, output);
  }

  // optional .structDefinitions.Properties prop = 2;
  if (has_prop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->prop_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.Vertex)
}

::google::protobuf::uint8* Vertex::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.Vertex)
  // required .structDefinitions.Point3D point = 1;
  if (has_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->point_, false, target);
  }

  // optional .structDefinitions.Properties prop = 2;
  if (has_prop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->prop_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.Vertex)
  return target;
}

int Vertex::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:structDefinitions.Vertex)
  int total_size = 0;

  // required .structDefinitions.Point3D point = 1;
  if (has_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->point_);
  }
  // optional .structDefinitions.Properties prop = 2;
  if (has_prop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->prop_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vertex::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:structDefinitions.Vertex)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Vertex* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Vertex>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:structDefinitions.Vertex)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:structDefinitions.Vertex)
    MergeFrom(*source);
  }
}

void Vertex::MergeFrom(const Vertex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:structDefinitions.Vertex)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_point()) {
      mutable_point()->::structDefinitions::Point3D::MergeFrom(from.point());
    }
    if (from.has_prop()) {
      mutable_prop()->::structDefinitions::Properties::MergeFrom(from.prop());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Vertex::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:structDefinitions.Vertex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vertex::CopyFrom(const Vertex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:structDefinitions.Vertex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vertex::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_point()) {
    if (!this->point_->IsInitialized()) return false;
  }
  return true;
}

void Vertex::Swap(Vertex* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vertex::InternalSwap(Vertex* other) {
  std::swap(point_, other->point_);
  std::swap(prop_, other->prop_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Vertex::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Vertex_descriptor_;
  metadata.reflection = Vertex_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vertex

// required .structDefinitions.Point3D point = 1;
bool Vertex::has_point() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Vertex::set_has_point() {
  _has_bits_[0] |= 0x00000001u;
}
void Vertex::clear_has_point() {
  _has_bits_[0] &= ~0x00000001u;
}
void Vertex::clear_point() {
  if (point_ != NULL) point_->::structDefinitions::Point3D::Clear();
  clear_has_point();
}
const ::structDefinitions::Point3D& Vertex::point() const {
  // @@protoc_insertion_point(field_get:structDefinitions.Vertex.point)
  return point_ != NULL ? *point_ : *default_instance_->point_;
}
::structDefinitions::Point3D* Vertex::mutable_point() {
  set_has_point();
  if (point_ == NULL) {
    point_ = new ::structDefinitions::Point3D;
  }
  // @@protoc_insertion_point(field_mutable:structDefinitions.Vertex.point)
  return point_;
}
::structDefinitions::Point3D* Vertex::release_point() {
  // @@protoc_insertion_point(field_release:structDefinitions.Vertex.point)
  clear_has_point();
  ::structDefinitions::Point3D* temp = point_;
  point_ = NULL;
  return temp;
}
void Vertex::set_allocated_point(::structDefinitions::Point3D* point) {
  delete point_;
  point_ = point;
  if (point) {
    set_has_point();
  } else {
    clear_has_point();
  }
  // @@protoc_insertion_point(field_set_allocated:structDefinitions.Vertex.point)
}

// optional .structDefinitions.Properties prop = 2;
bool Vertex::has_prop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Vertex::set_has_prop() {
  _has_bits_[0] |= 0x00000002u;
}
void Vertex::clear_has_prop() {
  _has_bits_[0] &= ~0x00000002u;
}
void Vertex::clear_prop() {
  if (prop_ != NULL) prop_->::structDefinitions::Properties::Clear();
  clear_has_prop();
}
const ::structDefinitions::Properties& Vertex::prop() const {
  // @@protoc_insertion_point(field_get:structDefinitions.Vertex.prop)
  return prop_ != NULL ? *prop_ : *default_instance_->prop_;
}
::structDefinitions::Properties* Vertex::mutable_prop() {
  set_has_prop();
  if (prop_ == NULL) {
    prop_ = new ::structDefinitions::Properties;
  }
  // @@protoc_insertion_point(field_mutable:structDefinitions.Vertex.prop)
  return prop_;
}
::structDefinitions::Properties* Vertex::release_prop() {
  // @@protoc_insertion_point(field_release:structDefinitions.Vertex.prop)
  clear_has_prop();
  ::structDefinitions::Properties* temp = prop_;
  prop_ = NULL;
  return temp;
}
void Vertex::set_allocated_prop(::structDefinitions::Properties* prop) {
  delete prop_;
  prop_ = prop;
  if (prop) {
    set_has_prop();
  } else {
    clear_has_prop();
  }
  // @@protoc_insertion_point(field_set_allocated:structDefinitions.Vertex.prop)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Edge::kV1FieldNumber;
const int Edge::kV2FieldNumber;
const int Edge::kPropFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Edge::Edge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.Edge)
}

void Edge::InitAsDefaultInstance() {
  v1_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
  v2_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
  prop_ = const_cast< ::structDefinitions::Properties*>(&::structDefinitions::Properties::default_instance());
}

Edge::Edge(const Edge& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.Edge)
}

void Edge::SharedCtor() {
  _cached_size_ = 0;
  v1_ = NULL;
  v2_ = NULL;
  prop_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Edge::~Edge() {
  // @@protoc_insertion_point(destructor:structDefinitions.Edge)
  SharedDtor();
}

void Edge::SharedDtor() {
  if (this != default_instance_) {
    delete v1_;
    delete v2_;
    delete prop_;
  }
}

void Edge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Edge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Edge_descriptor_;
}

const Edge& Edge::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

Edge* Edge::default_instance_ = NULL;

Edge* Edge::New(::google::protobuf::Arena* arena) const {
  Edge* n = new Edge;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Edge::Clear() {
// @@protoc_insertion_point(message_clear_start:structDefinitions.Edge)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_v1()) {
      if (v1_ != NULL) v1_->::structDefinitions::Point3D::Clear();
    }
    if (has_v2()) {
      if (v2_ != NULL) v2_->::structDefinitions::Point3D::Clear();
    }
    if (has_prop()) {
      if (prop_ != NULL) prop_->::structDefinitions::Properties::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Edge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.Edge)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .structDefinitions.Point3D v1 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_v2;
        break;
      }

      // required .structDefinitions.Point3D v2 = 2;
      case 2: {
        if (tag == 18) {
         parse_v2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_prop;
        break;
      }

      // optional .structDefinitions.Properties prop = 3;
      case 3: {
        if (tag == 26) {
         parse_prop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.Edge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.Edge)
  return false;
#undef DO_
}

void Edge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.Edge)
  // required .structDefinitions.Point3D v1 = 1;
  if (has_v1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->v1_, output);
  }

  // required .structDefinitions.Point3D v2 = 2;
  if (has_v2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->v2_, output);
  }

  // optional .structDefinitions.Properties prop = 3;
  if (has_prop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->prop_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.Edge)
}

::google::protobuf::uint8* Edge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.Edge)
  // required .structDefinitions.Point3D v1 = 1;
  if (has_v1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->v1_, false, target);
  }

  // required .structDefinitions.Point3D v2 = 2;
  if (has_v2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->v2_, false, target);
  }

  // optional .structDefinitions.Properties prop = 3;
  if (has_prop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->prop_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.Edge)
  return target;
}

int Edge::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:structDefinitions.Edge)
  int total_size = 0;

  if (has_v1()) {
    // required .structDefinitions.Point3D v1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v1_);
  }

  if (has_v2()) {
    // required .structDefinitions.Point3D v2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v2_);
  }

  return total_size;
}
int Edge::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:structDefinitions.Edge)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .structDefinitions.Point3D v1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v1_);

    // required .structDefinitions.Point3D v2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v2_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .structDefinitions.Properties prop = 3;
  if (has_prop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->prop_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Edge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:structDefinitions.Edge)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Edge* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Edge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:structDefinitions.Edge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:structDefinitions.Edge)
    MergeFrom(*source);
  }
}

void Edge::MergeFrom(const Edge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:structDefinitions.Edge)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_v1()) {
      mutable_v1()->::structDefinitions::Point3D::MergeFrom(from.v1());
    }
    if (from.has_v2()) {
      mutable_v2()->::structDefinitions::Point3D::MergeFrom(from.v2());
    }
    if (from.has_prop()) {
      mutable_prop()->::structDefinitions::Properties::MergeFrom(from.prop());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Edge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:structDefinitions.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Edge::CopyFrom(const Edge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:structDefinitions.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Edge::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_v1()) {
    if (!this->v1_->IsInitialized()) return false;
  }
  if (has_v2()) {
    if (!this->v2_->IsInitialized()) return false;
  }
  return true;
}

void Edge::Swap(Edge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Edge::InternalSwap(Edge* other) {
  std::swap(v1_, other->v1_);
  std::swap(v2_, other->v2_);
  std::swap(prop_, other->prop_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Edge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Edge_descriptor_;
  metadata.reflection = Edge_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Edge

// required .structDefinitions.Point3D v1 = 1;
bool Edge::has_v1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Edge::set_has_v1() {
  _has_bits_[0] |= 0x00000001u;
}
void Edge::clear_has_v1() {
  _has_bits_[0] &= ~0x00000001u;
}
void Edge::clear_v1() {
  if (v1_ != NULL) v1_->::structDefinitions::Point3D::Clear();
  clear_has_v1();
}
const ::structDefinitions::Point3D& Edge::v1() const {
  // @@protoc_insertion_point(field_get:structDefinitions.Edge.v1)
  return v1_ != NULL ? *v1_ : *default_instance_->v1_;
}
::structDefinitions::Point3D* Edge::mutable_v1() {
  set_has_v1();
  if (v1_ == NULL) {
    v1_ = new ::structDefinitions::Point3D;
  }
  // @@protoc_insertion_point(field_mutable:structDefinitions.Edge.v1)
  return v1_;
}
::structDefinitions::Point3D* Edge::release_v1() {
  // @@protoc_insertion_point(field_release:structDefinitions.Edge.v1)
  clear_has_v1();
  ::structDefinitions::Point3D* temp = v1_;
  v1_ = NULL;
  return temp;
}
void Edge::set_allocated_v1(::structDefinitions::Point3D* v1) {
  delete v1_;
  v1_ = v1;
  if (v1) {
    set_has_v1();
  } else {
    clear_has_v1();
  }
  // @@protoc_insertion_point(field_set_allocated:structDefinitions.Edge.v1)
}

// required .structDefinitions.Point3D v2 = 2;
bool Edge::has_v2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Edge::set_has_v2() {
  _has_bits_[0] |= 0x00000002u;
}
void Edge::clear_has_v2() {
  _has_bits_[0] &= ~0x00000002u;
}
void Edge::clear_v2() {
  if (v2_ != NULL) v2_->::structDefinitions::Point3D::Clear();
  clear_has_v2();
}
const ::structDefinitions::Point3D& Edge::v2() const {
  // @@protoc_insertion_point(field_get:structDefinitions.Edge.v2)
  return v2_ != NULL ? *v2_ : *default_instance_->v2_;
}
::structDefinitions::Point3D* Edge::mutable_v2() {
  set_has_v2();
  if (v2_ == NULL) {
    v2_ = new ::structDefinitions::Point3D;
  }
  // @@protoc_insertion_point(field_mutable:structDefinitions.Edge.v2)
  return v2_;
}
::structDefinitions::Point3D* Edge::release_v2() {
  // @@protoc_insertion_point(field_release:structDefinitions.Edge.v2)
  clear_has_v2();
  ::structDefinitions::Point3D* temp = v2_;
  v2_ = NULL;
  return temp;
}
void Edge::set_allocated_v2(::structDefinitions::Point3D* v2) {
  delete v2_;
  v2_ = v2;
  if (v2) {
    set_has_v2();
  } else {
    clear_has_v2();
  }
  // @@protoc_insertion_point(field_set_allocated:structDefinitions.Edge.v2)
}

// optional .structDefinitions.Properties prop = 3;
bool Edge::has_prop() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Edge::set_has_prop() {
  _has_bits_[0] |= 0x00000004u;
}
void Edge::clear_has_prop() {
  _has_bits_[0] &= ~0x00000004u;
}
void Edge::clear_prop() {
  if (prop_ != NULL) prop_->::structDefinitions::Properties::Clear();
  clear_has_prop();
}
const ::structDefinitions::Properties& Edge::prop() const {
  // @@protoc_insertion_point(field_get:structDefinitions.Edge.prop)
  return prop_ != NULL ? *prop_ : *default_instance_->prop_;
}
::structDefinitions::Properties* Edge::mutable_prop() {
  set_has_prop();
  if (prop_ == NULL) {
    prop_ = new ::structDefinitions::Properties;
  }
  // @@protoc_insertion_point(field_mutable:structDefinitions.Edge.prop)
  return prop_;
}
::structDefinitions::Properties* Edge::release_prop() {
  // @@protoc_insertion_point(field_release:structDefinitions.Edge.prop)
  clear_has_prop();
  ::structDefinitions::Properties* temp = prop_;
  prop_ = NULL;
  return temp;
}
void Edge::set_allocated_prop(::structDefinitions::Properties* prop) {
  delete prop_;
  prop_ = prop;
  if (prop) {
    set_has_prop();
  } else {
    clear_has_prop();
  }
  // @@protoc_insertion_point(field_set_allocated:structDefinitions.Edge.prop)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TriangleFace::kV1FieldNumber;
const int TriangleFace::kV2FieldNumber;
const int TriangleFace::kV3FieldNumber;
const int TriangleFace::kPropFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TriangleFace::TriangleFace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.TriangleFace)
}

void TriangleFace::InitAsDefaultInstance() {
  v1_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
  v2_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
  v3_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
  prop_ = const_cast< ::structDefinitions::Properties*>(&::structDefinitions::Properties::default_instance());
}

TriangleFace::TriangleFace(const TriangleFace& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.TriangleFace)
}

void TriangleFace::SharedCtor() {
  _cached_size_ = 0;
  v1_ = NULL;
  v2_ = NULL;
  v3_ = NULL;
  prop_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TriangleFace::~TriangleFace() {
  // @@protoc_insertion_point(destructor:structDefinitions.TriangleFace)
  SharedDtor();
}

void TriangleFace::SharedDtor() {
  if (this != default_instance_) {
    delete v1_;
    delete v2_;
    delete v3_;
    delete prop_;
  }
}

void TriangleFace::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TriangleFace::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TriangleFace_descriptor_;
}

const TriangleFace& TriangleFace::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

TriangleFace* TriangleFace::default_instance_ = NULL;

TriangleFace* TriangleFace::New(::google::protobuf::Arena* arena) const {
  TriangleFace* n = new TriangleFace;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TriangleFace::Clear() {
// @@protoc_insertion_point(message_clear_start:structDefinitions.TriangleFace)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_v1()) {
      if (v1_ != NULL) v1_->::structDefinitions::Point3D::Clear();
    }
    if (has_v2()) {
      if (v2_ != NULL) v2_->::structDefinitions::Point3D::Clear();
    }
    if (has_v3()) {
      if (v3_ != NULL) v3_->::structDefinitions::Point3D::Clear();
    }
    if (has_prop()) {
      if (prop_ != NULL) prop_->::structDefinitions::Properties::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TriangleFace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.TriangleFace)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .structDefinitions.Point3D v1 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_v2;
        break;
      }

      // required .structDefinitions.Point3D v2 = 2;
      case 2: {
        if (tag == 18) {
         parse_v2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_v3;
        break;
      }

      // required .structDefinitions.Point3D v3 = 3;
      case 3: {
        if (tag == 26) {
         parse_v3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v3()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_prop;
        break;
      }

      // optional .structDefinitions.Properties prop = 4;
      case 4: {
        if (tag == 34) {
         parse_prop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.TriangleFace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.TriangleFace)
  return false;
#undef DO_
}

void TriangleFace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.TriangleFace)
  // required .structDefinitions.Point3D v1 = 1;
  if (has_v1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->v1_, output);
  }

  // required .structDefinitions.Point3D v2 = 2;
  if (has_v2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->v2_, output);
  }

  // required .structDefinitions.Point3D v3 = 3;
  if (has_v3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->v3_, output);
  }

  // optional .structDefinitions.Properties prop = 4;
  if (has_prop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->prop_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.TriangleFace)
}

::google::protobuf::uint8* TriangleFace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.TriangleFace)
  // required .structDefinitions.Point3D v1 = 1;
  if (has_v1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->v1_, false, target);
  }

  // required .structDefinitions.Point3D v2 = 2;
  if (has_v2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->v2_, false, target);
  }

  // required .structDefinitions.Point3D v3 = 3;
  if (has_v3()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->v3_, false, target);
  }

  // optional .structDefinitions.Properties prop = 4;
  if (has_prop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->prop_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.TriangleFace)
  return target;
}

int TriangleFace::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:structDefinitions.TriangleFace)
  int total_size = 0;

  if (has_v1()) {
    // required .structDefinitions.Point3D v1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v1_);
  }

  if (has_v2()) {
    // required .structDefinitions.Point3D v2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v2_);
  }

  if (has_v3()) {
    // required .structDefinitions.Point3D v3 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v3_);
  }

  return total_size;
}
int TriangleFace::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:structDefinitions.TriangleFace)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .structDefinitions.Point3D v1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v1_);

    // required .structDefinitions.Point3D v2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v2_);

    // required .structDefinitions.Point3D v3 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v3_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .structDefinitions.Properties prop = 4;
  if (has_prop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->prop_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TriangleFace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:structDefinitions.TriangleFace)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TriangleFace* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TriangleFace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:structDefinitions.TriangleFace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:structDefinitions.TriangleFace)
    MergeFrom(*source);
  }
}

void TriangleFace::MergeFrom(const TriangleFace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:structDefinitions.TriangleFace)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_v1()) {
      mutable_v1()->::structDefinitions::Point3D::MergeFrom(from.v1());
    }
    if (from.has_v2()) {
      mutable_v2()->::structDefinitions::Point3D::MergeFrom(from.v2());
    }
    if (from.has_v3()) {
      mutable_v3()->::structDefinitions::Point3D::MergeFrom(from.v3());
    }
    if (from.has_prop()) {
      mutable_prop()->::structDefinitions::Properties::MergeFrom(from.prop());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TriangleFace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:structDefinitions.TriangleFace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TriangleFace::CopyFrom(const TriangleFace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:structDefinitions.TriangleFace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TriangleFace::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_v1()) {
    if (!this->v1_->IsInitialized()) return false;
  }
  if (has_v2()) {
    if (!this->v2_->IsInitialized()) return false;
  }
  if (has_v3()) {
    if (!this->v3_->IsInitialized()) return false;
  }
  return true;
}

void TriangleFace::Swap(TriangleFace* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TriangleFace::InternalSwap(TriangleFace* other) {
  std::swap(v1_, other->v1_);
  std::swap(v2_, other->v2_);
  std::swap(v3_, other->v3_);
  std::swap(prop_, other->prop_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TriangleFace::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TriangleFace_descriptor_;
  metadata.reflection = TriangleFace_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TriangleFace

// required .structDefinitions.Point3D v1 = 1;
bool TriangleFace::has_v1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TriangleFace::set_has_v1() {
  _has_bits_[0] |= 0x00000001u;
}
void TriangleFace::clear_has_v1() {
  _has_bits_[0] &= ~0x00000001u;
}
void TriangleFace::clear_v1() {
  if (v1_ != NULL) v1_->::structDefinitions::Point3D::Clear();
  clear_has_v1();
}
const ::structDefinitions::Point3D& TriangleFace::v1() const {
  // @@protoc_insertion_point(field_get:structDefinitions.TriangleFace.v1)
  return v1_ != NULL ? *v1_ : *default_instance_->v1_;
}
::structDefinitions::Point3D* TriangleFace::mutable_v1() {
  set_has_v1();
  if (v1_ == NULL) {
    v1_ = new ::structDefinitions::Point3D;
  }
  // @@protoc_insertion_point(field_mutable:structDefinitions.TriangleFace.v1)
  return v1_;
}
::structDefinitions::Point3D* TriangleFace::release_v1() {
  // @@protoc_insertion_point(field_release:structDefinitions.TriangleFace.v1)
  clear_has_v1();
  ::structDefinitions::Point3D* temp = v1_;
  v1_ = NULL;
  return temp;
}
void TriangleFace::set_allocated_v1(::structDefinitions::Point3D* v1) {
  delete v1_;
  v1_ = v1;
  if (v1) {
    set_has_v1();
  } else {
    clear_has_v1();
  }
  // @@protoc_insertion_point(field_set_allocated:structDefinitions.TriangleFace.v1)
}

// required .structDefinitions.Point3D v2 = 2;
bool TriangleFace::has_v2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TriangleFace::set_has_v2() {
  _has_bits_[0] |= 0x00000002u;
}
void TriangleFace::clear_has_v2() {
  _has_bits_[0] &= ~0x00000002u;
}
void TriangleFace::clear_v2() {
  if (v2_ != NULL) v2_->::structDefinitions::Point3D::Clear();
  clear_has_v2();
}
const ::structDefinitions::Point3D& TriangleFace::v2() const {
  // @@protoc_insertion_point(field_get:structDefinitions.TriangleFace.v2)
  return v2_ != NULL ? *v2_ : *default_instance_->v2_;
}
::structDefinitions::Point3D* TriangleFace::mutable_v2() {
  set_has_v2();
  if (v2_ == NULL) {
    v2_ = new ::structDefinitions::Point3D;
  }
  // @@protoc_insertion_point(field_mutable:structDefinitions.TriangleFace.v2)
  return v2_;
}
::structDefinitions::Point3D* TriangleFace::release_v2() {
  // @@protoc_insertion_point(field_release:structDefinitions.TriangleFace.v2)
  clear_has_v2();
  ::structDefinitions::Point3D* temp = v2_;
  v2_ = NULL;
  return temp;
}
void TriangleFace::set_allocated_v2(::structDefinitions::Point3D* v2) {
  delete v2_;
  v2_ = v2;
  if (v2) {
    set_has_v2();
  } else {
    clear_has_v2();
  }
  // @@protoc_insertion_point(field_set_allocated:structDefinitions.TriangleFace.v2)
}

// required .structDefinitions.Point3D v3 = 3;
bool TriangleFace::has_v3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TriangleFace::set_has_v3() {
  _has_bits_[0] |= 0x00000004u;
}
void TriangleFace::clear_has_v3() {
  _has_bits_[0] &= ~0x00000004u;
}
void TriangleFace::clear_v3() {
  if (v3_ != NULL) v3_->::structDefinitions::Point3D::Clear();
  clear_has_v3();
}
const ::structDefinitions::Point3D& TriangleFace::v3() const {
  // @@protoc_insertion_point(field_get:structDefinitions.TriangleFace.v3)
  return v3_ != NULL ? *v3_ : *default_instance_->v3_;
}
::structDefinitions::Point3D* TriangleFace::mutable_v3() {
  set_has_v3();
  if (v3_ == NULL) {
    v3_ = new ::structDefinitions::Point3D;
  }
  // @@protoc_insertion_point(field_mutable:structDefinitions.TriangleFace.v3)
  return v3_;
}
::structDefinitions::Point3D* TriangleFace::release_v3() {
  // @@protoc_insertion_point(field_release:structDefinitions.TriangleFace.v3)
  clear_has_v3();
  ::structDefinitions::Point3D* temp = v3_;
  v3_ = NULL;
  return temp;
}
void TriangleFace::set_allocated_v3(::structDefinitions::Point3D* v3) {
  delete v3_;
  v3_ = v3;
  if (v3) {
    set_has_v3();
  } else {
    clear_has_v3();
  }
  // @@protoc_insertion_point(field_set_allocated:structDefinitions.TriangleFace.v3)
}

// optional .structDefinitions.Properties prop = 4;
bool TriangleFace::has_prop() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TriangleFace::set_has_prop() {
  _has_bits_[0] |= 0x00000008u;
}
void TriangleFace::clear_has_prop() {
  _has_bits_[0] &= ~0x00000008u;
}
void TriangleFace::clear_prop() {
  if (prop_ != NULL) prop_->::structDefinitions::Properties::Clear();
  clear_has_prop();
}
const ::structDefinitions::Properties& TriangleFace::prop() const {
  // @@protoc_insertion_point(field_get:structDefinitions.TriangleFace.prop)
  return prop_ != NULL ? *prop_ : *default_instance_->prop_;
}
::structDefinitions::Properties* TriangleFace::mutable_prop() {
  set_has_prop();
  if (prop_ == NULL) {
    prop_ = new ::structDefinitions::Properties;
  }
  // @@protoc_insertion_point(field_mutable:structDefinitions.TriangleFace.prop)
  return prop_;
}
::structDefinitions::Properties* TriangleFace::release_prop() {
  // @@protoc_insertion_point(field_release:structDefinitions.TriangleFace.prop)
  clear_has_prop();
  ::structDefinitions::Properties* temp = prop_;
  prop_ = NULL;
  return temp;
}
void TriangleFace::set_allocated_prop(::structDefinitions::Properties* prop) {
  delete prop_;
  prop_ = prop;
  if (prop) {
    set_has_prop();
  } else {
    clear_has_prop();
  }
  // @@protoc_insertion_point(field_set_allocated:structDefinitions.TriangleFace.prop)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Block::kV1FieldNumber;
const int Block::kV2FieldNumber;
const int Block::kV3FieldNumber;
const int Block::kV4FieldNumber;
const int Block::kPropFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Block::Block()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.Block)
}

void Block::InitAsDefaultInstance() {
  v1_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
  v2_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
  v3_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
  v4_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
  prop_ = const_cast< ::structDefinitions::Properties*>(&::structDefinitions::Properties::default_instance());
}

Block::Block(const Block& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.Block)
}

void Block::SharedCtor() {
  _cached_size_ = 0;
  v1_ = NULL;
  v2_ = NULL;
  v3_ = NULL;
  v4_ = NULL;
  prop_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Block::~Block() {
  // @@protoc_insertion_point(destructor:structDefinitions.Block)
  SharedDtor();
}

void Block::SharedDtor() {
  if (this != default_instance_) {
    delete v1_;
    delete v2_;
    delete v3_;
    delete v4_;
    delete prop_;
  }
}

void Block::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Block::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Block_descriptor_;
}

const Block& Block::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

Block* Block::default_instance_ = NULL;

Block* Block::New(::google::protobuf::Arena* arena) const {
  Block* n = new Block;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Block::Clear() {
// @@protoc_insertion_point(message_clear_start:structDefinitions.Block)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_v1()) {
      if (v1_ != NULL) v1_->::structDefinitions::Point3D::Clear();
    }
    if (has_v2()) {
      if (v2_ != NULL) v2_->::structDefinitions::Point3D::Clear();
    }
    if (has_v3()) {
      if (v3_ != NULL) v3_->::structDefinitions::Point3D::Clear();
    }
    if (has_v4()) {
      if (v4_ != NULL) v4_->::structDefinitions::Point3D::Clear();
    }
    if (has_prop()) {
      if (prop_ != NULL) prop_->::structDefinitions::Properties::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.Block)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .structDefinitions.Point3D v1 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_v2;
        break;
      }

      // required .structDefinitions.Point3D v2 = 2;
      case 2: {
        if (tag == 18) {
         parse_v2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_v3;
        break;
      }

      // required .structDefinitions.Point3D v3 = 3;
      case 3: {
        if (tag == 26) {
         parse_v3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v3()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_v4;
        break;
      }

      // required .structDefinitions.Point3D v4 = 4;
      case 4: {
        if (tag == 34) {
         parse_v4:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v4()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_prop;
        break;
      }

      // optional .structDefinitions.Properties prop = 5;
      case 5: {
        if (tag == 42) {
         parse_prop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.Block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.Block)
  return false;
#undef DO_
}

void Block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.Block)
  // required .structDefinitions.Point3D v1 = 1;
  if (has_v1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->v1_, output);
  }

  // required .structDefinitions.Point3D v2 = 2;
  if (has_v2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->v2_, output);
  }

  // required .structDefinitions.Point3D v3 = 3;
  if (has_v3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->v3_, output);
  }

  // required .structDefinitions.Point3D v4 = 4;
  if (has_v4()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->v4_, output);
  }

  // optional .structDefinitions.Properties prop = 5;
  if (has_prop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->prop_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.Block)
}

::google::protobuf::uint8* Block::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.Block)
  // required .structDefinitions.Point3D v1 = 1;
  if (has_v1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->v1_, false, target);
  }

  // required .structDefinitions.Point3D v2 = 2;
  if (has_v2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->v2_, false, target);
  }

  // required .structDefinitions.Point3D v3 = 3;
  if (has_v3()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->v3_, false, target);
  }

  // required .structDefinitions.Point3D v4 = 4;
  if (has_v4()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->v4_, false, target);
  }

  // optional .structDefinitions.Properties prop = 5;
  if (has_prop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->prop_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.Block)
  return target;
}

int Block::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:structDefinitions.Block)
  int total_size = 0;

  if (has_v1()) {
    // required .structDefinitions.Point3D v1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v1_);
  }

  if (has_v2()) {
    // required .structDefinitions.Point3D v2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v2_);
  }

  if (has_v3()) {
    // required .structDefinitions.Point3D v3 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v3_);
  }

  if (has_v4()) {
    // required .structDefinitions.Point3D v4 = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v4_);
  }

  return total_size;
}
int Block::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:structDefinitions.Block)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required .structDefinitions.Point3D v1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v1_);

    // required .structDefinitions.Point3D v2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v2_);

    // required .structDefinitions.Point3D v3 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v3_);

    // required .structDefinitions.Point3D v4 = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v4_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .structDefinitions.Properties prop = 5;
  if (has_prop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->prop_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Block::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:structDefinitions.Block)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Block* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Block>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:structDefinitions.Block)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:structDefinitions.Block)
    MergeFrom(*source);
  }
}

void Block::MergeFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:structDefinitions.Block)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_v1()) {
      mutable_v1()->::structDefinitions::Point3D::MergeFrom(from.v1());
    }
    if (from.has_v2()) {
      mutable_v2()->::structDefinitions::Point3D::MergeFrom(from.v2());
    }
    if (from.has_v3()) {
      mutable_v3()->::structDefinitions::Point3D::MergeFrom(from.v3());
    }
    if (from.has_v4()) {
      mutable_v4()->::structDefinitions::Point3D::MergeFrom(from.v4());
    }
    if (from.has_prop()) {
      mutable_prop()->::structDefinitions::Properties::MergeFrom(from.prop());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Block::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:structDefinitions.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Block::CopyFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:structDefinitions.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Block::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_v1()) {
    if (!this->v1_->IsInitialized()) return false;
  }
  if (has_v2()) {
    if (!this->v2_->IsInitialized()) return false;
  }
  if (has_v3()) {
    if (!this->v3_->IsInitialized()) return false;
  }
  if (has_v4()) {
    if (!this->v4_->IsInitialized()) return false;
  }
  return true;
}

void Block::Swap(Block* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Block::InternalSwap(Block* other) {
  std::swap(v1_, other->v1_);
  std::swap(v2_, other->v2_);
  std::swap(v3_, other->v3_);
  std::swap(v4_, other->v4_);
  std::swap(prop_, other->prop_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Block::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Block_descriptor_;
  metadata.reflection = Block_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Block

// required .structDefinitions.Point3D v1 = 1;
bool Block::has_v1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Block::set_has_v1() {
  _has_bits_[0] |= 0x00000001u;
}
void Block::clear_has_v1() {
  _has_bits_[0] &= ~0x00000001u;
}
void Block::clear_v1() {
  if (v1_ != NULL) v1_->::structDefinitions::Point3D::Clear();
  clear_has_v1();
}
const ::structDefinitions::Point3D& Block::v1() const {
  // @@protoc_insertion_point(field_get:structDefinitions.Block.v1)
  return v1_ != NULL ? *v1_ : *default_instance_->v1_;
}
::structDefinitions::Point3D* Block::mutable_v1() {
  set_has_v1();
  if (v1_ == NULL) {
    v1_ = new ::structDefinitions::Point3D;
  }
  // @@protoc_insertion_point(field_mutable:structDefinitions.Block.v1)
  return v1_;
}
::structDefinitions::Point3D* Block::release_v1() {
  // @@protoc_insertion_point(field_release:structDefinitions.Block.v1)
  clear_has_v1();
  ::structDefinitions::Point3D* temp = v1_;
  v1_ = NULL;
  return temp;
}
void Block::set_allocated_v1(::structDefinitions::Point3D* v1) {
  delete v1_;
  v1_ = v1;
  if (v1) {
    set_has_v1();
  } else {
    clear_has_v1();
  }
  // @@protoc_insertion_point(field_set_allocated:structDefinitions.Block.v1)
}

// required .structDefinitions.Point3D v2 = 2;
bool Block::has_v2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Block::set_has_v2() {
  _has_bits_[0] |= 0x00000002u;
}
void Block::clear_has_v2() {
  _has_bits_[0] &= ~0x00000002u;
}
void Block::clear_v2() {
  if (v2_ != NULL) v2_->::structDefinitions::Point3D::Clear();
  clear_has_v2();
}
const ::structDefinitions::Point3D& Block::v2() const {
  // @@protoc_insertion_point(field_get:structDefinitions.Block.v2)
  return v2_ != NULL ? *v2_ : *default_instance_->v2_;
}
::structDefinitions::Point3D* Block::mutable_v2() {
  set_has_v2();
  if (v2_ == NULL) {
    v2_ = new ::structDefinitions::Point3D;
  }
  // @@protoc_insertion_point(field_mutable:structDefinitions.Block.v2)
  return v2_;
}
::structDefinitions::Point3D* Block::release_v2() {
  // @@protoc_insertion_point(field_release:structDefinitions.Block.v2)
  clear_has_v2();
  ::structDefinitions::Point3D* temp = v2_;
  v2_ = NULL;
  return temp;
}
void Block::set_allocated_v2(::structDefinitions::Point3D* v2) {
  delete v2_;
  v2_ = v2;
  if (v2) {
    set_has_v2();
  } else {
    clear_has_v2();
  }
  // @@protoc_insertion_point(field_set_allocated:structDefinitions.Block.v2)
}

// required .structDefinitions.Point3D v3 = 3;
bool Block::has_v3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Block::set_has_v3() {
  _has_bits_[0] |= 0x00000004u;
}
void Block::clear_has_v3() {
  _has_bits_[0] &= ~0x00000004u;
}
void Block::clear_v3() {
  if (v3_ != NULL) v3_->::structDefinitions::Point3D::Clear();
  clear_has_v3();
}
const ::structDefinitions::Point3D& Block::v3() const {
  // @@protoc_insertion_point(field_get:structDefinitions.Block.v3)
  return v3_ != NULL ? *v3_ : *default_instance_->v3_;
}
::structDefinitions::Point3D* Block::mutable_v3() {
  set_has_v3();
  if (v3_ == NULL) {
    v3_ = new ::structDefinitions::Point3D;
  }
  // @@protoc_insertion_point(field_mutable:structDefinitions.Block.v3)
  return v3_;
}
::structDefinitions::Point3D* Block::release_v3() {
  // @@protoc_insertion_point(field_release:structDefinitions.Block.v3)
  clear_has_v3();
  ::structDefinitions::Point3D* temp = v3_;
  v3_ = NULL;
  return temp;
}
void Block::set_allocated_v3(::structDefinitions::Point3D* v3) {
  delete v3_;
  v3_ = v3;
  if (v3) {
    set_has_v3();
  } else {
    clear_has_v3();
  }
  // @@protoc_insertion_point(field_set_allocated:structDefinitions.Block.v3)
}

// required .structDefinitions.Point3D v4 = 4;
bool Block::has_v4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Block::set_has_v4() {
  _has_bits_[0] |= 0x00000008u;
}
void Block::clear_has_v4() {
  _has_bits_[0] &= ~0x00000008u;
}
void Block::clear_v4() {
  if (v4_ != NULL) v4_->::structDefinitions::Point3D::Clear();
  clear_has_v4();
}
const ::structDefinitions::Point3D& Block::v4() const {
  // @@protoc_insertion_point(field_get:structDefinitions.Block.v4)
  return v4_ != NULL ? *v4_ : *default_instance_->v4_;
}
::structDefinitions::Point3D* Block::mutable_v4() {
  set_has_v4();
  if (v4_ == NULL) {
    v4_ = new ::structDefinitions::Point3D;
  }
  // @@protoc_insertion_point(field_mutable:structDefinitions.Block.v4)
  return v4_;
}
::structDefinitions::Point3D* Block::release_v4() {
  // @@protoc_insertion_point(field_release:structDefinitions.Block.v4)
  clear_has_v4();
  ::structDefinitions::Point3D* temp = v4_;
  v4_ = NULL;
  return temp;
}
void Block::set_allocated_v4(::structDefinitions::Point3D* v4) {
  delete v4_;
  v4_ = v4;
  if (v4) {
    set_has_v4();
  } else {
    clear_has_v4();
  }
  // @@protoc_insertion_point(field_set_allocated:structDefinitions.Block.v4)
}

// optional .structDefinitions.Properties prop = 5;
bool Block::has_prop() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Block::set_has_prop() {
  _has_bits_[0] |= 0x00000010u;
}
void Block::clear_has_prop() {
  _has_bits_[0] &= ~0x00000010u;
}
void Block::clear_prop() {
  if (prop_ != NULL) prop_->::structDefinitions::Properties::Clear();
  clear_has_prop();
}
const ::structDefinitions::Properties& Block::prop() const {
  // @@protoc_insertion_point(field_get:structDefinitions.Block.prop)
  return prop_ != NULL ? *prop_ : *default_instance_->prop_;
}
::structDefinitions::Properties* Block::mutable_prop() {
  set_has_prop();
  if (prop_ == NULL) {
    prop_ = new ::structDefinitions::Properties;
  }
  // @@protoc_insertion_point(field_mutable:structDefinitions.Block.prop)
  return prop_;
}
::structDefinitions::Properties* Block::release_prop() {
  // @@protoc_insertion_point(field_release:structDefinitions.Block.prop)
  clear_has_prop();
  ::structDefinitions::Properties* temp = prop_;
  prop_ = NULL;
  return temp;
}
void Block::set_allocated_prop(::structDefinitions::Properties* prop) {
  delete prop_;
  prop_ = prop;
  if (prop) {
    set_has_prop();
  } else {
    clear_has_prop();
  }
  // @@protoc_insertion_point(field_set_allocated:structDefinitions.Block.prop)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* MessageInfo_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageInfo_Type_descriptor_;
}
bool MessageInfo_Type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MessageInfo_Type MessageInfo::DATA;
const MessageInfo_Type MessageInfo::RENDER;
const MessageInfo_Type MessageInfo::BREAKPOINT;
const MessageInfo_Type MessageInfo::ACCEPTED;
const MessageInfo_Type MessageInfo::REJECTED;
const MessageInfo_Type MessageInfo::ACK;
const MessageInfo_Type MessageInfo::CLEAN;
const MessageInfo_Type MessageInfo::Type_MIN;
const MessageInfo_Type MessageInfo::Type_MAX;
const int MessageInfo::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageInfo::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageInfo::MessageInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.MessageInfo)
}

void MessageInfo::InitAsDefaultInstance() {
}

MessageInfo::MessageInfo(const MessageInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.MessageInfo)
}

void MessageInfo::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageInfo::~MessageInfo() {
  // @@protoc_insertion_point(destructor:structDefinitions.MessageInfo)
  SharedDtor();
}

void MessageInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageInfo_descriptor_;
}

const MessageInfo& MessageInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

MessageInfo* MessageInfo::default_instance_ = NULL;

MessageInfo* MessageInfo::New(::google::protobuf::Arena* arena) const {
  MessageInfo* n = new MessageInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:structDefinitions.MessageInfo)
  type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MessageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.MessageInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .structDefinitions.MessageInfo.Type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::structDefinitions::MessageInfo_Type_IsValid(value)) {
            set_type(static_cast< ::structDefinitions::MessageInfo_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.MessageInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.MessageInfo)
  return false;
#undef DO_
}

void MessageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.MessageInfo)
  // required .structDefinitions.MessageInfo.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.MessageInfo)
}

::google::protobuf::uint8* MessageInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.MessageInfo)
  // required .structDefinitions.MessageInfo.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.MessageInfo)
  return target;
}

int MessageInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:structDefinitions.MessageInfo)
  int total_size = 0;

  // required .structDefinitions.MessageInfo.Type type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:structDefinitions.MessageInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MessageInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:structDefinitions.MessageInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:structDefinitions.MessageInfo)
    MergeFrom(*source);
  }
}

void MessageInfo::MergeFrom(const MessageInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:structDefinitions.MessageInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MessageInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:structDefinitions.MessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageInfo::CopyFrom(const MessageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:structDefinitions.MessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MessageInfo::Swap(MessageInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageInfo::InternalSwap(MessageInfo* other) {
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageInfo_descriptor_;
  metadata.reflection = MessageInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageInfo

// required .structDefinitions.MessageInfo.Type type = 1;
bool MessageInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MessageInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void MessageInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void MessageInfo::clear_type() {
  type_ = 1;
  clear_has_type();
}
 ::structDefinitions::MessageInfo_Type MessageInfo::type() const {
  // @@protoc_insertion_point(field_get:structDefinitions.MessageInfo.type)
  return static_cast< ::structDefinitions::MessageInfo_Type >(type_);
}
 void MessageInfo::set_type(::structDefinitions::MessageInfo_Type value) {
  assert(::structDefinitions::MessageInfo_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:structDefinitions.MessageInfo.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Header::kSizeOfDataFieldNumber;
const int Header::kEndOfDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Header::Header()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.Header)
}

void Header::InitAsDefaultInstance() {
}

Header::Header(const Header& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.Header)
}

void Header::SharedCtor() {
  _cached_size_ = 0;
  sizeofdata_ = 0;
  endofdata_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Header::~Header() {
  // @@protoc_insertion_point(destructor:structDefinitions.Header)
  SharedDtor();
}

void Header::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Header::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Header::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Header_descriptor_;
}

const Header& Header::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

Header* Header::default_instance_ = NULL;

Header* Header::New(::google::protobuf::Arena* arena) const {
  Header* n = new Header;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Header::Clear() {
// @@protoc_insertion_point(message_clear_start:structDefinitions.Header)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Header, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Header*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(sizeofdata_, endofdata_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Header::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.Header)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 sizeOfData = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sizeofdata_)));
          set_has_sizeofdata();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_endOfData;
        break;
      }

      // required bool endOfData = 7;
      case 7: {
        if (tag == 56) {
         parse_endOfData:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &endofdata_)));
          set_has_endofdata();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.Header)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.Header)
  return false;
#undef DO_
}

void Header::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.Header)
  // required int32 sizeOfData = 1;
  if (has_sizeofdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sizeofdata(), output);
  }

  // required bool endOfData = 7;
  if (has_endofdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->endofdata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.Header)
}

::google::protobuf::uint8* Header::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.Header)
  // required int32 sizeOfData = 1;
  if (has_sizeofdata()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sizeofdata(), target);
  }

  // required bool endOfData = 7;
  if (has_endofdata()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->endofdata(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.Header)
  return target;
}

int Header::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:structDefinitions.Header)
  int total_size = 0;

  if (has_sizeofdata()) {
    // required int32 sizeOfData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sizeofdata());
  }

  if (has_endofdata()) {
    // required bool endOfData = 7;
    total_size += 1 + 1;
  }

  return total_size;
}
int Header::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:structDefinitions.Header)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 sizeOfData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sizeofdata());

    // required bool endOfData = 7;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Header::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:structDefinitions.Header)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Header* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Header>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:structDefinitions.Header)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:structDefinitions.Header)
    MergeFrom(*source);
  }
}

void Header::MergeFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:structDefinitions.Header)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sizeofdata()) {
      set_sizeofdata(from.sizeofdata());
    }
    if (from.has_endofdata()) {
      set_endofdata(from.endofdata());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Header::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:structDefinitions.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Header::CopyFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:structDefinitions.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Header::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Header::Swap(Header* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Header::InternalSwap(Header* other) {
  std::swap(sizeofdata_, other->sizeofdata_);
  std::swap(endofdata_, other->endofdata_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Header::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Header_descriptor_;
  metadata.reflection = Header_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Header

// required int32 sizeOfData = 1;
bool Header::has_sizeofdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Header::set_has_sizeofdata() {
  _has_bits_[0] |= 0x00000001u;
}
void Header::clear_has_sizeofdata() {
  _has_bits_[0] &= ~0x00000001u;
}
void Header::clear_sizeofdata() {
  sizeofdata_ = 0;
  clear_has_sizeofdata();
}
 ::google::protobuf::int32 Header::sizeofdata() const {
  // @@protoc_insertion_point(field_get:structDefinitions.Header.sizeOfData)
  return sizeofdata_;
}
 void Header::set_sizeofdata(::google::protobuf::int32 value) {
  set_has_sizeofdata();
  sizeofdata_ = value;
  // @@protoc_insertion_point(field_set:structDefinitions.Header.sizeOfData)
}

// required bool endOfData = 7;
bool Header::has_endofdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Header::set_has_endofdata() {
  _has_bits_[0] |= 0x00000002u;
}
void Header::clear_has_endofdata() {
  _has_bits_[0] &= ~0x00000002u;
}
void Header::clear_endofdata() {
  endofdata_ = false;
  clear_has_endofdata();
}
 bool Header::endofdata() const {
  // @@protoc_insertion_point(field_get:structDefinitions.Header.endOfData)
  return endofdata_;
}
 void Header::set_endofdata(bool value) {
  set_has_endofdata();
  endofdata_ = value;
  // @@protoc_insertion_point(field_set:structDefinitions.Header.endOfData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataPackage::kVertexesFieldNumber;
const int DataPackage::kEdgesFieldNumber;
const int DataPackage::kFacesFieldNumber;
const int DataPackage::kBlocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataPackage::DataPackage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.DataPackage)
}

void DataPackage::InitAsDefaultInstance() {
}

DataPackage::DataPackage(const DataPackage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.DataPackage)
}

void DataPackage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataPackage::~DataPackage() {
  // @@protoc_insertion_point(destructor:structDefinitions.DataPackage)
  SharedDtor();
}

void DataPackage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DataPackage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataPackage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataPackage_descriptor_;
}

const DataPackage& DataPackage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

DataPackage* DataPackage::default_instance_ = NULL;

DataPackage* DataPackage::New(::google::protobuf::Arena* arena) const {
  DataPackage* n = new DataPackage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataPackage::Clear() {
// @@protoc_insertion_point(message_clear_start:structDefinitions.DataPackage)
  vertexes_.Clear();
  edges_.Clear();
  faces_.Clear();
  blocks_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DataPackage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.DataPackage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .structDefinitions.Vertex vertexes = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_vertexes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_vertexes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_vertexes;
        if (input->ExpectTag(26)) goto parse_loop_edges;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .structDefinitions.Edge edges = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_edges:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_edges()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_edges;
        if (input->ExpectTag(34)) goto parse_loop_faces;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .structDefinitions.TriangleFace faces = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_faces:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_faces()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_faces;
        if (input->ExpectTag(42)) goto parse_loop_blocks;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .structDefinitions.Block blocks = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_blocks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_blocks()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_blocks;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.DataPackage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.DataPackage)
  return false;
#undef DO_
}

void DataPackage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.DataPackage)
  // repeated .structDefinitions.Vertex vertexes = 2;
  for (unsigned int i = 0, n = this->vertexes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->vertexes(i), output);
  }

  // repeated .structDefinitions.Edge edges = 3;
  for (unsigned int i = 0, n = this->edges_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->edges(i), output);
  }

  // repeated .structDefinitions.TriangleFace faces = 4;
  for (unsigned int i = 0, n = this->faces_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->faces(i), output);
  }

  // repeated .structDefinitions.Block blocks = 5;
  for (unsigned int i = 0, n = this->blocks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->blocks(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.DataPackage)
}

::google::protobuf::uint8* DataPackage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.DataPackage)
  // repeated .structDefinitions.Vertex vertexes = 2;
  for (unsigned int i = 0, n = this->vertexes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->vertexes(i), false, target);
  }

  // repeated .structDefinitions.Edge edges = 3;
  for (unsigned int i = 0, n = this->edges_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->edges(i), false, target);
  }

  // repeated .structDefinitions.TriangleFace faces = 4;
  for (unsigned int i = 0, n = this->faces_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->faces(i), false, target);
  }

  // repeated .structDefinitions.Block blocks = 5;
  for (unsigned int i = 0, n = this->blocks_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->blocks(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.DataPackage)
  return target;
}

int DataPackage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:structDefinitions.DataPackage)
  int total_size = 0;

  // repeated .structDefinitions.Vertex vertexes = 2;
  total_size += 1 * this->vertexes_size();
  for (int i = 0; i < this->vertexes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->vertexes(i));
  }

  // repeated .structDefinitions.Edge edges = 3;
  total_size += 1 * this->edges_size();
  for (int i = 0; i < this->edges_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->edges(i));
  }

  // repeated .structDefinitions.TriangleFace faces = 4;
  total_size += 1 * this->faces_size();
  for (int i = 0; i < this->faces_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->faces(i));
  }

  // repeated .structDefinitions.Block blocks = 5;
  total_size += 1 * this->blocks_size();
  for (int i = 0; i < this->blocks_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->blocks(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataPackage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:structDefinitions.DataPackage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DataPackage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DataPackage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:structDefinitions.DataPackage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:structDefinitions.DataPackage)
    MergeFrom(*source);
  }
}

void DataPackage::MergeFrom(const DataPackage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:structDefinitions.DataPackage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  vertexes_.MergeFrom(from.vertexes_);
  edges_.MergeFrom(from.edges_);
  faces_.MergeFrom(from.faces_);
  blocks_.MergeFrom(from.blocks_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DataPackage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:structDefinitions.DataPackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataPackage::CopyFrom(const DataPackage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:structDefinitions.DataPackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataPackage::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->vertexes())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->edges())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->faces())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->blocks())) return false;
  return true;
}

void DataPackage::Swap(DataPackage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataPackage::InternalSwap(DataPackage* other) {
  vertexes_.UnsafeArenaSwap(&other->vertexes_);
  edges_.UnsafeArenaSwap(&other->edges_);
  faces_.UnsafeArenaSwap(&other->faces_);
  blocks_.UnsafeArenaSwap(&other->blocks_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataPackage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataPackage_descriptor_;
  metadata.reflection = DataPackage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DataPackage

// repeated .structDefinitions.Vertex vertexes = 2;
int DataPackage::vertexes_size() const {
  return vertexes_.size();
}
void DataPackage::clear_vertexes() {
  vertexes_.Clear();
}
const ::structDefinitions::Vertex& DataPackage::vertexes(int index) const {
  // @@protoc_insertion_point(field_get:structDefinitions.DataPackage.vertexes)
  return vertexes_.Get(index);
}
::structDefinitions::Vertex* DataPackage::mutable_vertexes(int index) {
  // @@protoc_insertion_point(field_mutable:structDefinitions.DataPackage.vertexes)
  return vertexes_.Mutable(index);
}
::structDefinitions::Vertex* DataPackage::add_vertexes() {
  // @@protoc_insertion_point(field_add:structDefinitions.DataPackage.vertexes)
  return vertexes_.Add();
}
::google::protobuf::RepeatedPtrField< ::structDefinitions::Vertex >*
DataPackage::mutable_vertexes() {
  // @@protoc_insertion_point(field_mutable_list:structDefinitions.DataPackage.vertexes)
  return &vertexes_;
}
const ::google::protobuf::RepeatedPtrField< ::structDefinitions::Vertex >&
DataPackage::vertexes() const {
  // @@protoc_insertion_point(field_list:structDefinitions.DataPackage.vertexes)
  return vertexes_;
}

// repeated .structDefinitions.Edge edges = 3;
int DataPackage::edges_size() const {
  return edges_.size();
}
void DataPackage::clear_edges() {
  edges_.Clear();
}
const ::structDefinitions::Edge& DataPackage::edges(int index) const {
  // @@protoc_insertion_point(field_get:structDefinitions.DataPackage.edges)
  return edges_.Get(index);
}
::structDefinitions::Edge* DataPackage::mutable_edges(int index) {
  // @@protoc_insertion_point(field_mutable:structDefinitions.DataPackage.edges)
  return edges_.Mutable(index);
}
::structDefinitions::Edge* DataPackage::add_edges() {
  // @@protoc_insertion_point(field_add:structDefinitions.DataPackage.edges)
  return edges_.Add();
}
::google::protobuf::RepeatedPtrField< ::structDefinitions::Edge >*
DataPackage::mutable_edges() {
  // @@protoc_insertion_point(field_mutable_list:structDefinitions.DataPackage.edges)
  return &edges_;
}
const ::google::protobuf::RepeatedPtrField< ::structDefinitions::Edge >&
DataPackage::edges() const {
  // @@protoc_insertion_point(field_list:structDefinitions.DataPackage.edges)
  return edges_;
}

// repeated .structDefinitions.TriangleFace faces = 4;
int DataPackage::faces_size() const {
  return faces_.size();
}
void DataPackage::clear_faces() {
  faces_.Clear();
}
const ::structDefinitions::TriangleFace& DataPackage::faces(int index) const {
  // @@protoc_insertion_point(field_get:structDefinitions.DataPackage.faces)
  return faces_.Get(index);
}
::structDefinitions::TriangleFace* DataPackage::mutable_faces(int index) {
  // @@protoc_insertion_point(field_mutable:structDefinitions.DataPackage.faces)
  return faces_.Mutable(index);
}
::structDefinitions::TriangleFace* DataPackage::add_faces() {
  // @@protoc_insertion_point(field_add:structDefinitions.DataPackage.faces)
  return faces_.Add();
}
::google::protobuf::RepeatedPtrField< ::structDefinitions::TriangleFace >*
DataPackage::mutable_faces() {
  // @@protoc_insertion_point(field_mutable_list:structDefinitions.DataPackage.faces)
  return &faces_;
}
const ::google::protobuf::RepeatedPtrField< ::structDefinitions::TriangleFace >&
DataPackage::faces() const {
  // @@protoc_insertion_point(field_list:structDefinitions.DataPackage.faces)
  return faces_;
}

// repeated .structDefinitions.Block blocks = 5;
int DataPackage::blocks_size() const {
  return blocks_.size();
}
void DataPackage::clear_blocks() {
  blocks_.Clear();
}
const ::structDefinitions::Block& DataPackage::blocks(int index) const {
  // @@protoc_insertion_point(field_get:structDefinitions.DataPackage.blocks)
  return blocks_.Get(index);
}
::structDefinitions::Block* DataPackage::mutable_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:structDefinitions.DataPackage.blocks)
  return blocks_.Mutable(index);
}
::structDefinitions::Block* DataPackage::add_blocks() {
  // @@protoc_insertion_point(field_add:structDefinitions.DataPackage.blocks)
  return blocks_.Add();
}
::google::protobuf::RepeatedPtrField< ::structDefinitions::Block >*
DataPackage::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable_list:structDefinitions.DataPackage.blocks)
  return &blocks_;
}
const ::google::protobuf::RepeatedPtrField< ::structDefinitions::Block >&
DataPackage::blocks() const {
  // @@protoc_insertion_point(field_list:structDefinitions.DataPackage.blocks)
  return blocks_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace structDefinitions

// @@protoc_insertion_point(global_scope)
