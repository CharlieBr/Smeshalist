// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structs.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "structs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace structDefinitions {

namespace {

const ::google::protobuf::Descriptor* Point2D_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Point2D_reflection_ = NULL;
const ::google::protobuf::Descriptor* Point2DSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Point2DSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* Point3D_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Point3D_reflection_ = NULL;
const ::google::protobuf::Descriptor* Point3DSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Point3DSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* Vertex_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Vertex_reflection_ = NULL;
const ::google::protobuf::Descriptor* VertexSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VertexSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* Edge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Edge_reflection_ = NULL;
const ::google::protobuf::Descriptor* EdgeSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EdgeSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* TriangleFace_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TriangleFace_reflection_ = NULL;
const ::google::protobuf::Descriptor* TriangleFaceSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TriangleFaceSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* Block_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Block_reflection_ = NULL;
const ::google::protobuf::Descriptor* BlockSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlockSet_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_structs_2eproto() {
  protobuf_AddDesc_structs_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "structs.proto");
  GOOGLE_CHECK(file != NULL);
  Point2D_descriptor_ = file->message_type(0);
  static const int Point2D_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point2D, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point2D, y_),
  };
  Point2D_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Point2D_descriptor_,
      Point2D::default_instance_,
      Point2D_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point2D, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point2D, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Point2D));
  Point2DSet_descriptor_ = file->message_type(1);
  static const int Point2DSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point2DSet, points_),
  };
  Point2DSet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Point2DSet_descriptor_,
      Point2DSet::default_instance_,
      Point2DSet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point2DSet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point2DSet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Point2DSet));
  Point3D_descriptor_ = file->message_type(2);
  static const int Point3D_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, z_),
  };
  Point3D_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Point3D_descriptor_,
      Point3D::default_instance_,
      Point3D_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Point3D));
  Point3DSet_descriptor_ = file->message_type(3);
  static const int Point3DSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3DSet, points_),
  };
  Point3DSet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Point3DSet_descriptor_,
      Point3DSet::default_instance_,
      Point3DSet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3DSet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3DSet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Point3DSet));
  Vertex_descriptor_ = file->message_type(4);
  static const int Vertex_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vertex, point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vertex, number_),
  };
  Vertex_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Vertex_descriptor_,
      Vertex::default_instance_,
      Vertex_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vertex, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vertex, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Vertex));
  VertexSet_descriptor_ = file->message_type(5);
  static const int VertexSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VertexSet, vertexes_),
  };
  VertexSet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      VertexSet_descriptor_,
      VertexSet::default_instance_,
      VertexSet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VertexSet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VertexSet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(VertexSet));
  Edge_descriptor_ = file->message_type(6);
  static const int Edge_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edge, v1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edge, v2_),
  };
  Edge_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Edge_descriptor_,
      Edge::default_instance_,
      Edge_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edge, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edge, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Edge));
  EdgeSet_descriptor_ = file->message_type(7);
  static const int EdgeSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeSet, edges_),
  };
  EdgeSet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EdgeSet_descriptor_,
      EdgeSet::default_instance_,
      EdgeSet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeSet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeSet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EdgeSet));
  TriangleFace_descriptor_ = file->message_type(8);
  static const int TriangleFace_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TriangleFace, v1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TriangleFace, v2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TriangleFace, v3_),
  };
  TriangleFace_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TriangleFace_descriptor_,
      TriangleFace::default_instance_,
      TriangleFace_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TriangleFace, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TriangleFace, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TriangleFace));
  TriangleFaceSet_descriptor_ = file->message_type(9);
  static const int TriangleFaceSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TriangleFaceSet, trianglefaces_),
  };
  TriangleFaceSet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TriangleFaceSet_descriptor_,
      TriangleFaceSet::default_instance_,
      TriangleFaceSet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TriangleFaceSet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TriangleFaceSet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TriangleFaceSet));
  Block_descriptor_ = file->message_type(10);
  static const int Block_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, v1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, v2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, v3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, v4_),
  };
  Block_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Block_descriptor_,
      Block::default_instance_,
      Block_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Block));
  BlockSet_descriptor_ = file->message_type(11);
  static const int BlockSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockSet, blocks_),
  };
  BlockSet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BlockSet_descriptor_,
      BlockSet::default_instance_,
      BlockSet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockSet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockSet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BlockSet));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_structs_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Point2D_descriptor_, &Point2D::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Point2DSet_descriptor_, &Point2DSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Point3D_descriptor_, &Point3D::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Point3DSet_descriptor_, &Point3DSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Vertex_descriptor_, &Vertex::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    VertexSet_descriptor_, &VertexSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Edge_descriptor_, &Edge::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EdgeSet_descriptor_, &EdgeSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TriangleFace_descriptor_, &TriangleFace::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TriangleFaceSet_descriptor_, &TriangleFaceSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Block_descriptor_, &Block::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BlockSet_descriptor_, &BlockSet::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_structs_2eproto() {
  delete Point2D::default_instance_;
  delete Point2D_reflection_;
  delete Point2DSet::default_instance_;
  delete Point2DSet_reflection_;
  delete Point3D::default_instance_;
  delete Point3D_reflection_;
  delete Point3DSet::default_instance_;
  delete Point3DSet_reflection_;
  delete Vertex::default_instance_;
  delete Vertex_reflection_;
  delete VertexSet::default_instance_;
  delete VertexSet_reflection_;
  delete Edge::default_instance_;
  delete Edge_reflection_;
  delete EdgeSet::default_instance_;
  delete EdgeSet_reflection_;
  delete TriangleFace::default_instance_;
  delete TriangleFace_reflection_;
  delete TriangleFaceSet::default_instance_;
  delete TriangleFaceSet_reflection_;
  delete Block::default_instance_;
  delete Block_reflection_;
  delete BlockSet::default_instance_;
  delete BlockSet_reflection_;
}

void protobuf_AddDesc_structs_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rstructs.proto\022\021structDefinitions\"\037\n\007Po"
    "int2D\022\t\n\001x\030\001 \002(\001\022\t\n\001y\030\002 \002(\001\"8\n\nPoint2DSe"
    "t\022*\n\006points\030\001 \003(\0132\032.structDefinitions.Po"
    "int2D\"*\n\007Point3D\022\t\n\001x\030\001 \002(\001\022\t\n\001y\030\002 \002(\001\022\t"
    "\n\001z\030\003 \002(\001\"8\n\nPoint3DSet\022*\n\006points\030\001 \003(\0132"
    "\032.structDefinitions.Point3D\"C\n\006Vertex\022)\n"
    "\005point\030\001 \002(\0132\032.structDefinitions.Point3D"
    "\022\016\n\006number\030\002 \002(\001\"8\n\tVertexSet\022+\n\010vertexe"
    "s\030\001 \003(\0132\031.structDefinitions.Vertex\"V\n\004Ed"
    "ge\022&\n\002v1\030\001 \002(\0132\032.structDefinitions.Point"
    "3D\022&\n\002v2\030\002 \002(\0132\032.structDefinitions.Point"
    "3D\"1\n\007EdgeSet\022&\n\005edges\030\001 \003(\0132\027.structDef"
    "initions.Edge\"\206\001\n\014TriangleFace\022&\n\002v1\030\001 \002"
    "(\0132\032.structDefinitions.Point3D\022&\n\002v2\030\002 \002"
    "(\0132\032.structDefinitions.Point3D\022&\n\002v3\030\003 \002"
    "(\0132\032.structDefinitions.Point3D\"I\n\017Triang"
    "leFaceSet\0226\n\rtriangleFaces\030\001 \003(\0132\037.struc"
    "tDefinitions.TriangleFace\"\247\001\n\005Block\022&\n\002v"
    "1\030\001 \002(\0132\032.structDefinitions.Point3D\022&\n\002v"
    "2\030\002 \002(\0132\032.structDefinitions.Point3D\022&\n\002v"
    "3\030\003 \002(\0132\032.structDefinitions.Point3D\022&\n\002v"
    "4\030\004 \002(\0132\032.structDefinitions.Point3D\"4\n\010B"
    "lockSet\022(\n\006blocks\030\001 \003(\0132\030.structDefiniti"
    "ons.Block", 929);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "structs.proto", &protobuf_RegisterTypes);
  Point2D::default_instance_ = new Point2D();
  Point2DSet::default_instance_ = new Point2DSet();
  Point3D::default_instance_ = new Point3D();
  Point3DSet::default_instance_ = new Point3DSet();
  Vertex::default_instance_ = new Vertex();
  VertexSet::default_instance_ = new VertexSet();
  Edge::default_instance_ = new Edge();
  EdgeSet::default_instance_ = new EdgeSet();
  TriangleFace::default_instance_ = new TriangleFace();
  TriangleFaceSet::default_instance_ = new TriangleFaceSet();
  Block::default_instance_ = new Block();
  BlockSet::default_instance_ = new BlockSet();
  Point2D::default_instance_->InitAsDefaultInstance();
  Point2DSet::default_instance_->InitAsDefaultInstance();
  Point3D::default_instance_->InitAsDefaultInstance();
  Point3DSet::default_instance_->InitAsDefaultInstance();
  Vertex::default_instance_->InitAsDefaultInstance();
  VertexSet::default_instance_->InitAsDefaultInstance();
  Edge::default_instance_->InitAsDefaultInstance();
  EdgeSet::default_instance_->InitAsDefaultInstance();
  TriangleFace::default_instance_->InitAsDefaultInstance();
  TriangleFaceSet::default_instance_->InitAsDefaultInstance();
  Block::default_instance_->InitAsDefaultInstance();
  BlockSet::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_structs_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_structs_2eproto {
  StaticDescriptorInitializer_structs_2eproto() {
    protobuf_AddDesc_structs_2eproto();
  }
} static_descriptor_initializer_structs_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Point2D::kXFieldNumber;
const int Point2D::kYFieldNumber;
#endif  // !_MSC_VER

Point2D::Point2D()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.Point2D)
}

void Point2D::InitAsDefaultInstance() {
}

Point2D::Point2D(const Point2D& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.Point2D)
}

void Point2D::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Point2D::~Point2D() {
  // @@protoc_insertion_point(destructor:structDefinitions.Point2D)
  SharedDtor();
}

void Point2D::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Point2D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point2D::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Point2D_descriptor_;
}

const Point2D& Point2D::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

Point2D* Point2D::default_instance_ = NULL;

Point2D* Point2D::New() const {
  return new Point2D;
}

void Point2D::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Point2D*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(x_, y_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Point2D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.Point2D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_y;
        break;
      }

      // required double y = 2;
      case 2: {
        if (tag == 17) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.Point2D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.Point2D)
  return false;
#undef DO_
}

void Point2D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.Point2D)
  // required double x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // required double y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.Point2D)
}

::google::protobuf::uint8* Point2D::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.Point2D)
  // required double x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // required double y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.Point2D)
  return target;
}

int Point2D::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double x = 1;
    if (has_x()) {
      total_size += 1 + 8;
    }

    // required double y = 2;
    if (has_y()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point2D::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Point2D* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Point2D*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Point2D::MergeFrom(const Point2D& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Point2D::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point2D::CopyFrom(const Point2D& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point2D::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Point2D::Swap(Point2D* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Point2D::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Point2D_descriptor_;
  metadata.reflection = Point2D_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Point2DSet::kPointsFieldNumber;
#endif  // !_MSC_VER

Point2DSet::Point2DSet()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.Point2DSet)
}

void Point2DSet::InitAsDefaultInstance() {
}

Point2DSet::Point2DSet(const Point2DSet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.Point2DSet)
}

void Point2DSet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Point2DSet::~Point2DSet() {
  // @@protoc_insertion_point(destructor:structDefinitions.Point2DSet)
  SharedDtor();
}

void Point2DSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Point2DSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point2DSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Point2DSet_descriptor_;
}

const Point2DSet& Point2DSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

Point2DSet* Point2DSet::default_instance_ = NULL;

Point2DSet* Point2DSet::New() const {
  return new Point2DSet;
}

void Point2DSet::Clear() {
  points_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Point2DSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.Point2DSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .structDefinitions.Point2D points = 1;
      case 1: {
        if (tag == 10) {
         parse_points:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_points;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.Point2DSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.Point2DSet)
  return false;
#undef DO_
}

void Point2DSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.Point2DSet)
  // repeated .structDefinitions.Point2D points = 1;
  for (int i = 0; i < this->points_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->points(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.Point2DSet)
}

::google::protobuf::uint8* Point2DSet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.Point2DSet)
  // repeated .structDefinitions.Point2D points = 1;
  for (int i = 0; i < this->points_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->points(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.Point2DSet)
  return target;
}

int Point2DSet::ByteSize() const {
  int total_size = 0;

  // repeated .structDefinitions.Point2D points = 1;
  total_size += 1 * this->points_size();
  for (int i = 0; i < this->points_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->points(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point2DSet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Point2DSet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Point2DSet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Point2DSet::MergeFrom(const Point2DSet& from) {
  GOOGLE_CHECK_NE(&from, this);
  points_.MergeFrom(from.points_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Point2DSet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point2DSet::CopyFrom(const Point2DSet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point2DSet::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->points())) return false;
  return true;
}

void Point2DSet::Swap(Point2DSet* other) {
  if (other != this) {
    points_.Swap(&other->points_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Point2DSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Point2DSet_descriptor_;
  metadata.reflection = Point2DSet_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Point3D::kXFieldNumber;
const int Point3D::kYFieldNumber;
const int Point3D::kZFieldNumber;
#endif  // !_MSC_VER

Point3D::Point3D()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.Point3D)
}

void Point3D::InitAsDefaultInstance() {
}

Point3D::Point3D(const Point3D& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.Point3D)
}

void Point3D::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Point3D::~Point3D() {
  // @@protoc_insertion_point(destructor:structDefinitions.Point3D)
  SharedDtor();
}

void Point3D::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Point3D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point3D::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Point3D_descriptor_;
}

const Point3D& Point3D::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

Point3D* Point3D::default_instance_ = NULL;

Point3D* Point3D::New() const {
  return new Point3D;
}

void Point3D::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Point3D*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(x_, z_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Point3D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.Point3D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_y;
        break;
      }

      // required double y = 2;
      case 2: {
        if (tag == 17) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_z;
        break;
      }

      // required double z = 3;
      case 3: {
        if (tag == 25) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.Point3D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.Point3D)
  return false;
#undef DO_
}

void Point3D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.Point3D)
  // required double x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // required double y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // required double z = 3;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.Point3D)
}

::google::protobuf::uint8* Point3D::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.Point3D)
  // required double x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // required double y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // required double z = 3;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.Point3D)
  return target;
}

int Point3D::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double x = 1;
    if (has_x()) {
      total_size += 1 + 8;
    }

    // required double y = 2;
    if (has_y()) {
      total_size += 1 + 8;
    }

    // required double z = 3;
    if (has_z()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point3D::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Point3D* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Point3D*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Point3D::MergeFrom(const Point3D& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Point3D::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point3D::CopyFrom(const Point3D& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point3D::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Point3D::Swap(Point3D* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(z_, other->z_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Point3D::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Point3D_descriptor_;
  metadata.reflection = Point3D_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Point3DSet::kPointsFieldNumber;
#endif  // !_MSC_VER

Point3DSet::Point3DSet()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.Point3DSet)
}

void Point3DSet::InitAsDefaultInstance() {
}

Point3DSet::Point3DSet(const Point3DSet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.Point3DSet)
}

void Point3DSet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Point3DSet::~Point3DSet() {
  // @@protoc_insertion_point(destructor:structDefinitions.Point3DSet)
  SharedDtor();
}

void Point3DSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Point3DSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point3DSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Point3DSet_descriptor_;
}

const Point3DSet& Point3DSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

Point3DSet* Point3DSet::default_instance_ = NULL;

Point3DSet* Point3DSet::New() const {
  return new Point3DSet;
}

void Point3DSet::Clear() {
  points_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Point3DSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.Point3DSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .structDefinitions.Point3D points = 1;
      case 1: {
        if (tag == 10) {
         parse_points:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_points;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.Point3DSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.Point3DSet)
  return false;
#undef DO_
}

void Point3DSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.Point3DSet)
  // repeated .structDefinitions.Point3D points = 1;
  for (int i = 0; i < this->points_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->points(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.Point3DSet)
}

::google::protobuf::uint8* Point3DSet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.Point3DSet)
  // repeated .structDefinitions.Point3D points = 1;
  for (int i = 0; i < this->points_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->points(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.Point3DSet)
  return target;
}

int Point3DSet::ByteSize() const {
  int total_size = 0;

  // repeated .structDefinitions.Point3D points = 1;
  total_size += 1 * this->points_size();
  for (int i = 0; i < this->points_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->points(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point3DSet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Point3DSet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Point3DSet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Point3DSet::MergeFrom(const Point3DSet& from) {
  GOOGLE_CHECK_NE(&from, this);
  points_.MergeFrom(from.points_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Point3DSet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point3DSet::CopyFrom(const Point3DSet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point3DSet::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->points())) return false;
  return true;
}

void Point3DSet::Swap(Point3DSet* other) {
  if (other != this) {
    points_.Swap(&other->points_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Point3DSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Point3DSet_descriptor_;
  metadata.reflection = Point3DSet_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Vertex::kPointFieldNumber;
const int Vertex::kNumberFieldNumber;
#endif  // !_MSC_VER

Vertex::Vertex()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.Vertex)
}

void Vertex::InitAsDefaultInstance() {
  point_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
}

Vertex::Vertex(const Vertex& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.Vertex)
}

void Vertex::SharedCtor() {
  _cached_size_ = 0;
  point_ = NULL;
  number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Vertex::~Vertex() {
  // @@protoc_insertion_point(destructor:structDefinitions.Vertex)
  SharedDtor();
}

void Vertex::SharedDtor() {
  if (this != default_instance_) {
    delete point_;
  }
}

void Vertex::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vertex::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Vertex_descriptor_;
}

const Vertex& Vertex::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

Vertex* Vertex::default_instance_ = NULL;

Vertex* Vertex::New() const {
  return new Vertex;
}

void Vertex::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_point()) {
      if (point_ != NULL) point_->::structDefinitions::Point3D::Clear();
    }
    number_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Vertex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.Vertex)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .structDefinitions.Point3D point = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_point()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_number;
        break;
      }

      // required double number = 2;
      case 2: {
        if (tag == 17) {
         parse_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &number_)));
          set_has_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.Vertex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.Vertex)
  return false;
#undef DO_
}

void Vertex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.Vertex)
  // required .structDefinitions.Point3D point = 1;
  if (has_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->point(), output);
  }

  // required double number = 2;
  if (has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->number(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.Vertex)
}

::google::protobuf::uint8* Vertex::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.Vertex)
  // required .structDefinitions.Point3D point = 1;
  if (has_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->point(), target);
  }

  // required double number = 2;
  if (has_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->number(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.Vertex)
  return target;
}

int Vertex::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .structDefinitions.Point3D point = 1;
    if (has_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->point());
    }

    // required double number = 2;
    if (has_number()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vertex::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Vertex* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Vertex*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Vertex::MergeFrom(const Vertex& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_point()) {
      mutable_point()->::structDefinitions::Point3D::MergeFrom(from.point());
    }
    if (from.has_number()) {
      set_number(from.number());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Vertex::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vertex::CopyFrom(const Vertex& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vertex::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_point()) {
    if (!this->point().IsInitialized()) return false;
  }
  return true;
}

void Vertex::Swap(Vertex* other) {
  if (other != this) {
    std::swap(point_, other->point_);
    std::swap(number_, other->number_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Vertex::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Vertex_descriptor_;
  metadata.reflection = Vertex_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int VertexSet::kVertexesFieldNumber;
#endif  // !_MSC_VER

VertexSet::VertexSet()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.VertexSet)
}

void VertexSet::InitAsDefaultInstance() {
}

VertexSet::VertexSet(const VertexSet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.VertexSet)
}

void VertexSet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VertexSet::~VertexSet() {
  // @@protoc_insertion_point(destructor:structDefinitions.VertexSet)
  SharedDtor();
}

void VertexSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void VertexSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VertexSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VertexSet_descriptor_;
}

const VertexSet& VertexSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

VertexSet* VertexSet::default_instance_ = NULL;

VertexSet* VertexSet::New() const {
  return new VertexSet;
}

void VertexSet::Clear() {
  vertexes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool VertexSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.VertexSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .structDefinitions.Vertex vertexes = 1;
      case 1: {
        if (tag == 10) {
         parse_vertexes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_vertexes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_vertexes;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.VertexSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.VertexSet)
  return false;
#undef DO_
}

void VertexSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.VertexSet)
  // repeated .structDefinitions.Vertex vertexes = 1;
  for (int i = 0; i < this->vertexes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->vertexes(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.VertexSet)
}

::google::protobuf::uint8* VertexSet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.VertexSet)
  // repeated .structDefinitions.Vertex vertexes = 1;
  for (int i = 0; i < this->vertexes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->vertexes(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.VertexSet)
  return target;
}

int VertexSet::ByteSize() const {
  int total_size = 0;

  // repeated .structDefinitions.Vertex vertexes = 1;
  total_size += 1 * this->vertexes_size();
  for (int i = 0; i < this->vertexes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->vertexes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VertexSet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const VertexSet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const VertexSet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void VertexSet::MergeFrom(const VertexSet& from) {
  GOOGLE_CHECK_NE(&from, this);
  vertexes_.MergeFrom(from.vertexes_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void VertexSet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VertexSet::CopyFrom(const VertexSet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VertexSet::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->vertexes())) return false;
  return true;
}

void VertexSet::Swap(VertexSet* other) {
  if (other != this) {
    vertexes_.Swap(&other->vertexes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata VertexSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VertexSet_descriptor_;
  metadata.reflection = VertexSet_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Edge::kV1FieldNumber;
const int Edge::kV2FieldNumber;
#endif  // !_MSC_VER

Edge::Edge()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.Edge)
}

void Edge::InitAsDefaultInstance() {
  v1_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
  v2_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
}

Edge::Edge(const Edge& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.Edge)
}

void Edge::SharedCtor() {
  _cached_size_ = 0;
  v1_ = NULL;
  v2_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Edge::~Edge() {
  // @@protoc_insertion_point(destructor:structDefinitions.Edge)
  SharedDtor();
}

void Edge::SharedDtor() {
  if (this != default_instance_) {
    delete v1_;
    delete v2_;
  }
}

void Edge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Edge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Edge_descriptor_;
}

const Edge& Edge::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

Edge* Edge::default_instance_ = NULL;

Edge* Edge::New() const {
  return new Edge;
}

void Edge::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_v1()) {
      if (v1_ != NULL) v1_->::structDefinitions::Point3D::Clear();
    }
    if (has_v2()) {
      if (v2_ != NULL) v2_->::structDefinitions::Point3D::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Edge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.Edge)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .structDefinitions.Point3D v1 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_v2;
        break;
      }

      // required .structDefinitions.Point3D v2 = 2;
      case 2: {
        if (tag == 18) {
         parse_v2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.Edge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.Edge)
  return false;
#undef DO_
}

void Edge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.Edge)
  // required .structDefinitions.Point3D v1 = 1;
  if (has_v1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->v1(), output);
  }

  // required .structDefinitions.Point3D v2 = 2;
  if (has_v2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->v2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.Edge)
}

::google::protobuf::uint8* Edge::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.Edge)
  // required .structDefinitions.Point3D v1 = 1;
  if (has_v1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->v1(), target);
  }

  // required .structDefinitions.Point3D v2 = 2;
  if (has_v2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->v2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.Edge)
  return target;
}

int Edge::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .structDefinitions.Point3D v1 = 1;
    if (has_v1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->v1());
    }

    // required .structDefinitions.Point3D v2 = 2;
    if (has_v2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->v2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Edge::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Edge* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Edge*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Edge::MergeFrom(const Edge& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_v1()) {
      mutable_v1()->::structDefinitions::Point3D::MergeFrom(from.v1());
    }
    if (from.has_v2()) {
      mutable_v2()->::structDefinitions::Point3D::MergeFrom(from.v2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Edge::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Edge::CopyFrom(const Edge& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Edge::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_v1()) {
    if (!this->v1().IsInitialized()) return false;
  }
  if (has_v2()) {
    if (!this->v2().IsInitialized()) return false;
  }
  return true;
}

void Edge::Swap(Edge* other) {
  if (other != this) {
    std::swap(v1_, other->v1_);
    std::swap(v2_, other->v2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Edge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Edge_descriptor_;
  metadata.reflection = Edge_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EdgeSet::kEdgesFieldNumber;
#endif  // !_MSC_VER

EdgeSet::EdgeSet()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.EdgeSet)
}

void EdgeSet::InitAsDefaultInstance() {
}

EdgeSet::EdgeSet(const EdgeSet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.EdgeSet)
}

void EdgeSet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EdgeSet::~EdgeSet() {
  // @@protoc_insertion_point(destructor:structDefinitions.EdgeSet)
  SharedDtor();
}

void EdgeSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EdgeSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EdgeSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EdgeSet_descriptor_;
}

const EdgeSet& EdgeSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

EdgeSet* EdgeSet::default_instance_ = NULL;

EdgeSet* EdgeSet::New() const {
  return new EdgeSet;
}

void EdgeSet::Clear() {
  edges_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EdgeSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.EdgeSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .structDefinitions.Edge edges = 1;
      case 1: {
        if (tag == 10) {
         parse_edges:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_edges()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_edges;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.EdgeSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.EdgeSet)
  return false;
#undef DO_
}

void EdgeSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.EdgeSet)
  // repeated .structDefinitions.Edge edges = 1;
  for (int i = 0; i < this->edges_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->edges(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.EdgeSet)
}

::google::protobuf::uint8* EdgeSet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.EdgeSet)
  // repeated .structDefinitions.Edge edges = 1;
  for (int i = 0; i < this->edges_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->edges(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.EdgeSet)
  return target;
}

int EdgeSet::ByteSize() const {
  int total_size = 0;

  // repeated .structDefinitions.Edge edges = 1;
  total_size += 1 * this->edges_size();
  for (int i = 0; i < this->edges_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->edges(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EdgeSet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EdgeSet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EdgeSet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EdgeSet::MergeFrom(const EdgeSet& from) {
  GOOGLE_CHECK_NE(&from, this);
  edges_.MergeFrom(from.edges_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EdgeSet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EdgeSet::CopyFrom(const EdgeSet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EdgeSet::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->edges())) return false;
  return true;
}

void EdgeSet::Swap(EdgeSet* other) {
  if (other != this) {
    edges_.Swap(&other->edges_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EdgeSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EdgeSet_descriptor_;
  metadata.reflection = EdgeSet_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TriangleFace::kV1FieldNumber;
const int TriangleFace::kV2FieldNumber;
const int TriangleFace::kV3FieldNumber;
#endif  // !_MSC_VER

TriangleFace::TriangleFace()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.TriangleFace)
}

void TriangleFace::InitAsDefaultInstance() {
  v1_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
  v2_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
  v3_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
}

TriangleFace::TriangleFace(const TriangleFace& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.TriangleFace)
}

void TriangleFace::SharedCtor() {
  _cached_size_ = 0;
  v1_ = NULL;
  v2_ = NULL;
  v3_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TriangleFace::~TriangleFace() {
  // @@protoc_insertion_point(destructor:structDefinitions.TriangleFace)
  SharedDtor();
}

void TriangleFace::SharedDtor() {
  if (this != default_instance_) {
    delete v1_;
    delete v2_;
    delete v3_;
  }
}

void TriangleFace::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TriangleFace::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TriangleFace_descriptor_;
}

const TriangleFace& TriangleFace::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

TriangleFace* TriangleFace::default_instance_ = NULL;

TriangleFace* TriangleFace::New() const {
  return new TriangleFace;
}

void TriangleFace::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_v1()) {
      if (v1_ != NULL) v1_->::structDefinitions::Point3D::Clear();
    }
    if (has_v2()) {
      if (v2_ != NULL) v2_->::structDefinitions::Point3D::Clear();
    }
    if (has_v3()) {
      if (v3_ != NULL) v3_->::structDefinitions::Point3D::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TriangleFace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.TriangleFace)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .structDefinitions.Point3D v1 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_v2;
        break;
      }

      // required .structDefinitions.Point3D v2 = 2;
      case 2: {
        if (tag == 18) {
         parse_v2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_v3;
        break;
      }

      // required .structDefinitions.Point3D v3 = 3;
      case 3: {
        if (tag == 26) {
         parse_v3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v3()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.TriangleFace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.TriangleFace)
  return false;
#undef DO_
}

void TriangleFace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.TriangleFace)
  // required .structDefinitions.Point3D v1 = 1;
  if (has_v1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->v1(), output);
  }

  // required .structDefinitions.Point3D v2 = 2;
  if (has_v2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->v2(), output);
  }

  // required .structDefinitions.Point3D v3 = 3;
  if (has_v3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->v3(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.TriangleFace)
}

::google::protobuf::uint8* TriangleFace::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.TriangleFace)
  // required .structDefinitions.Point3D v1 = 1;
  if (has_v1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->v1(), target);
  }

  // required .structDefinitions.Point3D v2 = 2;
  if (has_v2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->v2(), target);
  }

  // required .structDefinitions.Point3D v3 = 3;
  if (has_v3()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->v3(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.TriangleFace)
  return target;
}

int TriangleFace::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .structDefinitions.Point3D v1 = 1;
    if (has_v1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->v1());
    }

    // required .structDefinitions.Point3D v2 = 2;
    if (has_v2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->v2());
    }

    // required .structDefinitions.Point3D v3 = 3;
    if (has_v3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->v3());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TriangleFace::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TriangleFace* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TriangleFace*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TriangleFace::MergeFrom(const TriangleFace& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_v1()) {
      mutable_v1()->::structDefinitions::Point3D::MergeFrom(from.v1());
    }
    if (from.has_v2()) {
      mutable_v2()->::structDefinitions::Point3D::MergeFrom(from.v2());
    }
    if (from.has_v3()) {
      mutable_v3()->::structDefinitions::Point3D::MergeFrom(from.v3());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TriangleFace::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TriangleFace::CopyFrom(const TriangleFace& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TriangleFace::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_v1()) {
    if (!this->v1().IsInitialized()) return false;
  }
  if (has_v2()) {
    if (!this->v2().IsInitialized()) return false;
  }
  if (has_v3()) {
    if (!this->v3().IsInitialized()) return false;
  }
  return true;
}

void TriangleFace::Swap(TriangleFace* other) {
  if (other != this) {
    std::swap(v1_, other->v1_);
    std::swap(v2_, other->v2_);
    std::swap(v3_, other->v3_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TriangleFace::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TriangleFace_descriptor_;
  metadata.reflection = TriangleFace_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TriangleFaceSet::kTriangleFacesFieldNumber;
#endif  // !_MSC_VER

TriangleFaceSet::TriangleFaceSet()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.TriangleFaceSet)
}

void TriangleFaceSet::InitAsDefaultInstance() {
}

TriangleFaceSet::TriangleFaceSet(const TriangleFaceSet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.TriangleFaceSet)
}

void TriangleFaceSet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TriangleFaceSet::~TriangleFaceSet() {
  // @@protoc_insertion_point(destructor:structDefinitions.TriangleFaceSet)
  SharedDtor();
}

void TriangleFaceSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TriangleFaceSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TriangleFaceSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TriangleFaceSet_descriptor_;
}

const TriangleFaceSet& TriangleFaceSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

TriangleFaceSet* TriangleFaceSet::default_instance_ = NULL;

TriangleFaceSet* TriangleFaceSet::New() const {
  return new TriangleFaceSet;
}

void TriangleFaceSet::Clear() {
  trianglefaces_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TriangleFaceSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.TriangleFaceSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .structDefinitions.TriangleFace triangleFaces = 1;
      case 1: {
        if (tag == 10) {
         parse_triangleFaces:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_trianglefaces()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_triangleFaces;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.TriangleFaceSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.TriangleFaceSet)
  return false;
#undef DO_
}

void TriangleFaceSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.TriangleFaceSet)
  // repeated .structDefinitions.TriangleFace triangleFaces = 1;
  for (int i = 0; i < this->trianglefaces_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->trianglefaces(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.TriangleFaceSet)
}

::google::protobuf::uint8* TriangleFaceSet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.TriangleFaceSet)
  // repeated .structDefinitions.TriangleFace triangleFaces = 1;
  for (int i = 0; i < this->trianglefaces_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->trianglefaces(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.TriangleFaceSet)
  return target;
}

int TriangleFaceSet::ByteSize() const {
  int total_size = 0;

  // repeated .structDefinitions.TriangleFace triangleFaces = 1;
  total_size += 1 * this->trianglefaces_size();
  for (int i = 0; i < this->trianglefaces_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->trianglefaces(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TriangleFaceSet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TriangleFaceSet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TriangleFaceSet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TriangleFaceSet::MergeFrom(const TriangleFaceSet& from) {
  GOOGLE_CHECK_NE(&from, this);
  trianglefaces_.MergeFrom(from.trianglefaces_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TriangleFaceSet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TriangleFaceSet::CopyFrom(const TriangleFaceSet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TriangleFaceSet::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->trianglefaces())) return false;
  return true;
}

void TriangleFaceSet::Swap(TriangleFaceSet* other) {
  if (other != this) {
    trianglefaces_.Swap(&other->trianglefaces_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TriangleFaceSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TriangleFaceSet_descriptor_;
  metadata.reflection = TriangleFaceSet_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Block::kV1FieldNumber;
const int Block::kV2FieldNumber;
const int Block::kV3FieldNumber;
const int Block::kV4FieldNumber;
#endif  // !_MSC_VER

Block::Block()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.Block)
}

void Block::InitAsDefaultInstance() {
  v1_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
  v2_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
  v3_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
  v4_ = const_cast< ::structDefinitions::Point3D*>(&::structDefinitions::Point3D::default_instance());
}

Block::Block(const Block& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.Block)
}

void Block::SharedCtor() {
  _cached_size_ = 0;
  v1_ = NULL;
  v2_ = NULL;
  v3_ = NULL;
  v4_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Block::~Block() {
  // @@protoc_insertion_point(destructor:structDefinitions.Block)
  SharedDtor();
}

void Block::SharedDtor() {
  if (this != default_instance_) {
    delete v1_;
    delete v2_;
    delete v3_;
    delete v4_;
  }
}

void Block::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Block::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Block_descriptor_;
}

const Block& Block::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

Block* Block::default_instance_ = NULL;

Block* Block::New() const {
  return new Block;
}

void Block::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_v1()) {
      if (v1_ != NULL) v1_->::structDefinitions::Point3D::Clear();
    }
    if (has_v2()) {
      if (v2_ != NULL) v2_->::structDefinitions::Point3D::Clear();
    }
    if (has_v3()) {
      if (v3_ != NULL) v3_->::structDefinitions::Point3D::Clear();
    }
    if (has_v4()) {
      if (v4_ != NULL) v4_->::structDefinitions::Point3D::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.Block)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .structDefinitions.Point3D v1 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_v2;
        break;
      }

      // required .structDefinitions.Point3D v2 = 2;
      case 2: {
        if (tag == 18) {
         parse_v2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_v3;
        break;
      }

      // required .structDefinitions.Point3D v3 = 3;
      case 3: {
        if (tag == 26) {
         parse_v3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v3()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_v4;
        break;
      }

      // required .structDefinitions.Point3D v4 = 4;
      case 4: {
        if (tag == 34) {
         parse_v4:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v4()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.Block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.Block)
  return false;
#undef DO_
}

void Block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.Block)
  // required .structDefinitions.Point3D v1 = 1;
  if (has_v1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->v1(), output);
  }

  // required .structDefinitions.Point3D v2 = 2;
  if (has_v2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->v2(), output);
  }

  // required .structDefinitions.Point3D v3 = 3;
  if (has_v3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->v3(), output);
  }

  // required .structDefinitions.Point3D v4 = 4;
  if (has_v4()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->v4(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.Block)
}

::google::protobuf::uint8* Block::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.Block)
  // required .structDefinitions.Point3D v1 = 1;
  if (has_v1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->v1(), target);
  }

  // required .structDefinitions.Point3D v2 = 2;
  if (has_v2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->v2(), target);
  }

  // required .structDefinitions.Point3D v3 = 3;
  if (has_v3()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->v3(), target);
  }

  // required .structDefinitions.Point3D v4 = 4;
  if (has_v4()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->v4(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.Block)
  return target;
}

int Block::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .structDefinitions.Point3D v1 = 1;
    if (has_v1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->v1());
    }

    // required .structDefinitions.Point3D v2 = 2;
    if (has_v2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->v2());
    }

    // required .structDefinitions.Point3D v3 = 3;
    if (has_v3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->v3());
    }

    // required .structDefinitions.Point3D v4 = 4;
    if (has_v4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->v4());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Block::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Block* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Block*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Block::MergeFrom(const Block& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_v1()) {
      mutable_v1()->::structDefinitions::Point3D::MergeFrom(from.v1());
    }
    if (from.has_v2()) {
      mutable_v2()->::structDefinitions::Point3D::MergeFrom(from.v2());
    }
    if (from.has_v3()) {
      mutable_v3()->::structDefinitions::Point3D::MergeFrom(from.v3());
    }
    if (from.has_v4()) {
      mutable_v4()->::structDefinitions::Point3D::MergeFrom(from.v4());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Block::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Block::CopyFrom(const Block& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Block::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_v1()) {
    if (!this->v1().IsInitialized()) return false;
  }
  if (has_v2()) {
    if (!this->v2().IsInitialized()) return false;
  }
  if (has_v3()) {
    if (!this->v3().IsInitialized()) return false;
  }
  if (has_v4()) {
    if (!this->v4().IsInitialized()) return false;
  }
  return true;
}

void Block::Swap(Block* other) {
  if (other != this) {
    std::swap(v1_, other->v1_);
    std::swap(v2_, other->v2_);
    std::swap(v3_, other->v3_);
    std::swap(v4_, other->v4_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Block::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Block_descriptor_;
  metadata.reflection = Block_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BlockSet::kBlocksFieldNumber;
#endif  // !_MSC_VER

BlockSet::BlockSet()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:structDefinitions.BlockSet)
}

void BlockSet::InitAsDefaultInstance() {
}

BlockSet::BlockSet(const BlockSet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:structDefinitions.BlockSet)
}

void BlockSet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BlockSet::~BlockSet() {
  // @@protoc_insertion_point(destructor:structDefinitions.BlockSet)
  SharedDtor();
}

void BlockSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BlockSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlockSet_descriptor_;
}

const BlockSet& BlockSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_structs_2eproto();
  return *default_instance_;
}

BlockSet* BlockSet::default_instance_ = NULL;

BlockSet* BlockSet::New() const {
  return new BlockSet;
}

void BlockSet::Clear() {
  blocks_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BlockSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structDefinitions.BlockSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .structDefinitions.Block blocks = 1;
      case 1: {
        if (tag == 10) {
         parse_blocks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_blocks()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_blocks;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structDefinitions.BlockSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structDefinitions.BlockSet)
  return false;
#undef DO_
}

void BlockSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structDefinitions.BlockSet)
  // repeated .structDefinitions.Block blocks = 1;
  for (int i = 0; i < this->blocks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->blocks(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:structDefinitions.BlockSet)
}

::google::protobuf::uint8* BlockSet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:structDefinitions.BlockSet)
  // repeated .structDefinitions.Block blocks = 1;
  for (int i = 0; i < this->blocks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->blocks(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structDefinitions.BlockSet)
  return target;
}

int BlockSet::ByteSize() const {
  int total_size = 0;

  // repeated .structDefinitions.Block blocks = 1;
  total_size += 1 * this->blocks_size();
  for (int i = 0; i < this->blocks_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->blocks(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockSet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BlockSet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BlockSet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BlockSet::MergeFrom(const BlockSet& from) {
  GOOGLE_CHECK_NE(&from, this);
  blocks_.MergeFrom(from.blocks_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BlockSet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockSet::CopyFrom(const BlockSet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockSet::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->blocks())) return false;
  return true;
}

void BlockSet::Swap(BlockSet* other) {
  if (other != this) {
    blocks_.Swap(&other->blocks_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BlockSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlockSet_descriptor_;
  metadata.reflection = BlockSet_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace structDefinitions

// @@protoc_insertion_point(global_scope)
